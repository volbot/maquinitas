{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4","program":"/usr/bin/rls","arguments":["--crate-name","lewton","/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/lib.rs","--json=diagnostic-rendered-ansi,future-incompat","--crate-type","lib","--crate-type","cdylib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"ogg\"","-C","metadata=d2463391b81ba3a9","-C","extra-filename=-d2463391b81ba3a9","--out-dir","/home/louie/Programs/maquinitas/target/rls/debug/deps","-L","dependency=/home/louie/Programs/maquinitas/target/rls/debug/deps","--extern","byteorder=/home/louie/Programs/maquinitas/target/rls/debug/deps/libbyteorder-83eb27b6f40aa29f.rmeta","--extern","ogg=/home/louie/Programs/maquinitas/target/rls/debug/deps/libogg-6d32128f3ca75071.rmeta","--extern","smallvec=/home/louie/Programs/maquinitas/target/rls/debug/deps/libsmallvec-fce7830cbc15c675.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/usr"],"output":"/home/louie/Programs/maquinitas/target/rls/debug/deps/liblewton-d2463391b81ba3a9.rmeta"},"prelude":{"crate_id":{"name":"lewton","disambiguator":[1532457296810215589,0]},"crate_root":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src","external_crates":[{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12023920652292776473,0]}},{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[8607811298988957190,0]}},{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[9950803289178341956,0]}},{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13474909584011716809,0]}},{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[14989130687617550202,0]}},{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[16102964373074206153,0]}},{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[5778140418855102640,0]}},{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[4313679198529278428,0]}},{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[4133710094375488264,0]}},{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[7595865551076237336,0]}},{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[7540130326731804087,0]}},{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[12866123005810308726,0]}},{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[1553467655670750388,0]}},{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[15291019179027074616,0]}},{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[985971798445026598,0]}},{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[13801465309967224704,0]}},{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[2515263550385514547,0]}},{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[15896354199165419201,0]}},{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[14578328142683063560,0]}},{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/lib.rs","num":20,"id":{"name":"byteorder","disambiguator":[6423241497825961924,0]}},{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/lib.rs","num":21,"id":{"name":"smallvec","disambiguator":[12350767666879884034,0]}},{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/lib.rs","num":22,"id":{"name":"maybe_uninit","disambiguator":[10106981387162597702,0]}},{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/lib.rs","num":23,"id":{"name":"ogg","disambiguator":[3451490031887264234,0]}}],"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/lib.rs","byte_start":282,"byte_end":6258,"line_start":9,"line_end":256,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":23,"index":272},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/lib.rs","byte_start":2107,"byte_end":2119,"line_start":99,"line_end":99,"column_start":14,"column_end":26},"alias_span":null,"name":"OggReadError","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/lib.rs","byte_start":282,"byte_end":6258,"line_start":9,"line_end":256,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":179},{"krate":0,"index":196},{"krate":0,"index":238},{"krate":0,"index":283},{"krate":0,"index":420},{"krate":0,"index":452},{"krate":0,"index":516},{"krate":0,"index":542},{"krate":0,"index":663},{"krate":0,"index":673},{"krate":0,"index":545},{"krate":0,"index":548},{"krate":0,"index":550},{"krate":0,"index":552},{"krate":0,"index":554},{"krate":0,"index":556},{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":559},{"krate":0,"index":560}],"decl_id":null,"docs":"A `vorbis` decoder, written in Rust.","sig":null,"attributes":[{"value":"forbid(unsafe_code)","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/lib.rs","byte_start":282,"byte_end":305,"line_start":9,"line_end":9,"column_start":1,"column_end":24}},{"value":"*\nA `vorbis` decoder, written in Rust.\n\nIf you \"just\" want to decode `ogg/vorbis` files, take a look into\nthe `inside_ogg` module (make sure you haven't disabled the `ogg` feature).\n\nFor lower level, per-packet usage, you can have a look at the `audio` and `header`\nmodules.\n*/","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/lib.rs","byte_start":342,"byte_end":621,"line_start":12,"line_end":20,"column_start":1,"column_end":3}}]},{"kind":"Mod","id":{"krate":0,"index":10},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"header","qualname":"::header","value":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","parent":null,"children":[{"krate":0,"index":11},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":24},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":31},{"krate":0,"index":34},{"krate":0,"index":37},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":47},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":54},{"krate":0,"index":563},{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":561},{"krate":0,"index":57},{"krate":0,"index":59},{"krate":0,"index":61},{"krate":0,"index":63},{"krate":0,"index":65},{"krate":0,"index":68},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":85},{"krate":0,"index":585},{"krate":0,"index":588},{"krate":0,"index":590},{"krate":0,"index":591},{"krate":0,"index":594},{"krate":0,"index":595},{"krate":0,"index":597},{"krate":0,"index":600},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":92},{"krate":0,"index":100},{"krate":0,"index":107},{"krate":0,"index":110},{"krate":0,"index":117},{"krate":0,"index":127},{"krate":0,"index":136},{"krate":0,"index":140},{"krate":0,"index":145},{"krate":0,"index":151},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":163},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":173},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178}],"decl_id":null,"docs":"Header decoding","sig":null,"attributes":[{"value":"*\nHeader decoding\n\nThis module takes care of decoding of the three vorbis headers:\n\n1. Identification\n2. Comment\n3. Setup\n\nIt builds only on the internal bitpacking layer and the internal\nhuffman tree handling mod. Everything else about the headers is\ndecoded in this mod.\n*/","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":6542,"byte_end":6819,"line_start":9,"line_end":21,"column_start":1,"column_end":3}}]},{"kind":"TupleVariant","id":{"krate":0,"index":564},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":7252,"byte_end":7263,"line_start":36,"line_end":36,"column_start":2,"column_end":13},"name":"EndOfPacket","qualname":"::header::HeaderReadError::EndOfPacket","value":"HeaderReadError::EndOfPacket","parent":{"krate":0,"index":563},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":566},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":7366,"byte_end":7381,"line_start":39,"line_end":39,"column_start":2,"column_end":17},"name":"NotVorbisHeader","qualname":"::header::HeaderReadError::NotVorbisHeader","value":"HeaderReadError::NotVorbisHeader","parent":{"krate":0,"index":563},"children":[],"decl_id":null,"docs":" If the passed data don't start with the \"vorbis\"\n capture pattern, this error is returned.\n","sig":null,"attributes":[{"value":"/ If the passed data don't start with the \"vorbis\"","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":7266,"byte_end":7318,"line_start":37,"line_end":37,"column_start":2,"column_end":54}},{"value":"/ capture pattern, this error is returned.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":7320,"byte_end":7364,"line_start":38,"line_end":38,"column_start":2,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":568},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":7384,"byte_end":7408,"line_start":40,"line_end":40,"column_start":2,"column_end":26},"name":"UnsupportedVorbisVersion","qualname":"::header::HeaderReadError::UnsupportedVorbisVersion","value":"HeaderReadError::UnsupportedVorbisVersion","parent":{"krate":0,"index":563},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":570},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":7455,"byte_end":7470,"line_start":42,"line_end":42,"column_start":2,"column_end":17},"name":"HeaderBadFormat","qualname":"::header::HeaderReadError::HeaderBadFormat","value":"HeaderReadError::HeaderBadFormat","parent":{"krate":0,"index":563},"children":[],"decl_id":null,"docs":" If the header violates the vorbis spec\n","sig":null,"attributes":[{"value":"/ If the header violates the vorbis spec","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":7411,"byte_end":7453,"line_start":41,"line_end":41,"column_start":2,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":572},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":7694,"byte_end":7707,"line_start":48,"line_end":48,"column_start":2,"column_end":15},"name":"HeaderBadType","qualname":"::header::HeaderReadError::HeaderBadType","value":"HeaderReadError::HeaderBadType(u8)","parent":{"krate":0,"index":563},"children":[],"decl_id":null,"docs":" The given packet indeed seems to be a vorbis header,\n but it looks like it is a different header type than\n the function it was passed to.","sig":null,"attributes":[{"value":"/ The given packet indeed seems to be a vorbis header,","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":7473,"byte_end":7529,"line_start":43,"line_end":43,"column_start":2,"column_end":58}},{"value":"/ but it looks like it is a different header type than","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":7531,"byte_end":7587,"line_start":44,"line_end":44,"column_start":2,"column_end":58}},{"value":"/ the function it was passed to.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":7589,"byte_end":7623,"line_start":45,"line_end":45,"column_start":2,"column_end":36}},{"value":"/","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":7625,"byte_end":7628,"line_start":46,"line_end":46,"column_start":2,"column_end":5}},{"value":"/ It is not guaranteed that the type is a valid header type.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":7630,"byte_end":7692,"line_start":47,"line_end":47,"column_start":2,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":575},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":7830,"byte_end":7843,"line_start":51,"line_end":51,"column_start":2,"column_end":15},"name":"HeaderIsAudio","qualname":"::header::HeaderReadError::HeaderIsAudio","value":"HeaderReadError::HeaderIsAudio","parent":{"krate":0,"index":563},"children":[],"decl_id":null,"docs":" The given packet does not seem to be a header as per vorbis spec,\n instead it seems to be an audio packet.\n","sig":null,"attributes":[{"value":"/ The given packet does not seem to be a header as per vorbis spec,","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":7714,"byte_end":7783,"line_start":49,"line_end":49,"column_start":2,"column_end":71}},{"value":"/ instead it seems to be an audio packet.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":7785,"byte_end":7828,"line_start":50,"line_end":50,"column_start":2,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":577},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":7846,"byte_end":7861,"line_start":52,"line_end":52,"column_start":2,"column_end":17},"name":"Utf8DecodeError","qualname":"::header::HeaderReadError::Utf8DecodeError","value":"HeaderReadError::Utf8DecodeError","parent":{"krate":0,"index":563},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":579},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":8325,"byte_end":8345,"line_start":62,"line_end":62,"column_start":2,"column_end":22},"name":"BufferNotAddressable","qualname":"::header::HeaderReadError::BufferNotAddressable","value":"HeaderReadError::BufferNotAddressable","parent":{"krate":0,"index":563},"children":[],"decl_id":null,"docs":" If the needed memory isn't addressable by us","sig":null,"attributes":[{"value":"/ If the needed memory isn't addressable by us","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":7864,"byte_end":7912,"line_start":53,"line_end":53,"column_start":2,"column_end":50}},{"value":"/","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":7914,"byte_end":7917,"line_start":54,"line_end":54,"column_start":2,"column_end":5}},{"value":"/ This error is returned if a calculation yielded a higher value for","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":7919,"byte_end":7989,"line_start":55,"line_end":55,"column_start":2,"column_end":72}},{"value":"/ an internal buffer size that doesn't fit into the platform's address range.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":7991,"byte_end":8070,"line_start":56,"line_end":56,"column_start":2,"column_end":81}},{"value":"/ Note that if we \"simply\" encounter an allocation failure (OOM, etc),","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":8072,"byte_end":8144,"line_start":57,"line_end":57,"column_start":2,"column_end":74}},{"value":"/ we do what libstd does in these cases: crash.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":8146,"byte_end":8195,"line_start":58,"line_end":58,"column_start":2,"column_end":51}},{"value":"/","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":8197,"byte_end":8200,"line_start":59,"line_end":59,"column_start":2,"column_end":5}},{"value":"/ This error is not automatically an error of the passed data,","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":8202,"byte_end":8266,"line_start":60,"line_end":60,"column_start":2,"column_end":66}},{"value":"/ but rather is due to insufficient decoder hardware.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":8268,"byte_end":8323,"line_start":61,"line_end":61,"column_start":2,"column_end":57}}]},{"kind":"Enum","id":{"krate":0,"index":563},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":7233,"byte_end":7248,"line_start":35,"line_end":35,"column_start":10,"column_end":25},"name":"HeaderReadError","qualname":"::header::HeaderReadError","value":"pub enum HeaderReadError {\n    EndOfPacket,\n    NotVorbisHeader,\n    UnsupportedVorbisVersion,\n    HeaderBadFormat,\n    HeaderBadType(u8),\n    HeaderIsAudio,\n    Utf8DecodeError,\n    BufferNotAddressable,\n}","parent":null,"children":[{"krate":0,"index":564},{"krate":0,"index":566},{"krate":0,"index":568},{"krate":0,"index":570},{"krate":0,"index":572},{"krate":0,"index":575},{"krate":0,"index":577},{"krate":0,"index":579}],"decl_id":null,"docs":" Errors that can occur during Header decoding\n","sig":null,"attributes":[{"value":"/ Errors that can occur during Header decoding","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":7137,"byte_end":7185,"line_start":32,"line_end":32,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":74},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":12160,"byte_end":12169,"line_start":184,"line_end":184,"column_start":10,"column_end":19},"name":"HeaderSet","qualname":"::header::HeaderSet","value":"(IdentHeader, CommentHeader, SetupHeader)","parent":null,"children":[],"decl_id":null,"docs":" The set of the three Vorbis headers\n","sig":null,"attributes":[{"value":"/ The set of the three Vorbis headers","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":12111,"byte_end":12150,"line_start":183,"line_end":183,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":75},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":12414,"byte_end":12425,"line_start":194,"line_end":194,"column_start":12,"column_end":23},"name":"IdentHeader","qualname":"::header::IdentHeader","value":"IdentHeader { audio_channels, audio_sample_rate, bitrate_maximum, bitrate_nominal, bitrate_minimum, blocksize_0, blocksize_1 }","parent":null,"children":[{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83}],"decl_id":null,"docs":"Representation for the identification header","sig":null,"attributes":[{"value":"*\nRepresentation for the identification header\n\nThe identification header is the first of the three\nheaders inside each vorbis stream.\n\nIt covers basic information about the stream.\n*/","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":12216,"byte_end":12402,"line_start":186,"line_end":193,"column_start":1,"column_end":3}}]},{"kind":"Field","id":{"krate":0,"index":76},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":12481,"byte_end":12495,"line_start":196,"line_end":196,"column_start":6,"column_end":20},"name":"audio_channels","qualname":"::header::IdentHeader::audio_channels","value":"u8","parent":{"krate":0,"index":75},"children":[],"decl_id":null,"docs":" The number of audio channels in the stream\n","sig":null,"attributes":[{"value":"/ The number of audio channels in the stream","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":12429,"byte_end":12475,"line_start":195,"line_end":195,"column_start":2,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":77},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":12541,"byte_end":12558,"line_start":198,"line_end":198,"column_start":6,"column_end":23},"name":"audio_sample_rate","qualname":"::header::IdentHeader::audio_sample_rate","value":"u32","parent":{"krate":0,"index":75},"children":[],"decl_id":null,"docs":" The sample rate of the stream\n","sig":null,"attributes":[{"value":"/ The sample rate of the stream","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":12502,"byte_end":12535,"line_start":197,"line_end":197,"column_start":2,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":78},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":12695,"byte_end":12710,"line_start":203,"line_end":203,"column_start":6,"column_end":21},"name":"bitrate_maximum","qualname":"::header::IdentHeader::bitrate_maximum","value":"i32","parent":{"krate":0,"index":75},"children":[],"decl_id":null,"docs":" The maximum bit rate of the stream","sig":null,"attributes":[{"value":"/ The maximum bit rate of the stream","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":12566,"byte_end":12604,"line_start":199,"line_end":199,"column_start":2,"column_end":40}},{"value":"/","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":12606,"byte_end":12609,"line_start":200,"line_end":200,"column_start":2,"column_end":5}},{"value":"/ Note that this value is only a hint","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":12611,"byte_end":12650,"line_start":201,"line_end":201,"column_start":2,"column_end":41}},{"value":"/ and may be off by a large amount.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":12652,"byte_end":12689,"line_start":202,"line_end":202,"column_start":2,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":79},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":12847,"byte_end":12862,"line_start":208,"line_end":208,"column_start":6,"column_end":21},"name":"bitrate_nominal","qualname":"::header::IdentHeader::bitrate_nominal","value":"i32","parent":{"krate":0,"index":75},"children":[],"decl_id":null,"docs":" The nominal bit rate of the stream","sig":null,"attributes":[{"value":"/ The nominal bit rate of the stream","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":12718,"byte_end":12756,"line_start":204,"line_end":204,"column_start":2,"column_end":40}},{"value":"/","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":12758,"byte_end":12761,"line_start":205,"line_end":205,"column_start":2,"column_end":5}},{"value":"/ Note that this value is only a hint","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":12763,"byte_end":12802,"line_start":206,"line_end":206,"column_start":2,"column_end":41}},{"value":"/ and may be off by a large amount.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":12804,"byte_end":12841,"line_start":207,"line_end":207,"column_start":2,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":80},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":12999,"byte_end":13014,"line_start":213,"line_end":213,"column_start":6,"column_end":21},"name":"bitrate_minimum","qualname":"::header::IdentHeader::bitrate_minimum","value":"i32","parent":{"krate":0,"index":75},"children":[],"decl_id":null,"docs":" The minimum bit rate of the stream","sig":null,"attributes":[{"value":"/ The minimum bit rate of the stream","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":12870,"byte_end":12908,"line_start":209,"line_end":209,"column_start":2,"column_end":40}},{"value":"/","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":12910,"byte_end":12913,"line_start":210,"line_end":210,"column_start":2,"column_end":5}},{"value":"/ Note that this value is only a hint","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":12915,"byte_end":12954,"line_start":211,"line_end":211,"column_start":2,"column_end":41}},{"value":"/ and may be off by a large amount.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":12956,"byte_end":12993,"line_start":212,"line_end":212,"column_start":2,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":81},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":13026,"byte_end":13037,"line_start":214,"line_end":214,"column_start":6,"column_end":17},"name":"blocksize_0","qualname":"::header::IdentHeader::blocksize_0","value":"u8","parent":{"krate":0,"index":75},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":82},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":13048,"byte_end":13059,"line_start":215,"line_end":215,"column_start":6,"column_end":17},"name":"blocksize_1","qualname":"::header::IdentHeader::blocksize_1","value":"u8","parent":{"krate":0,"index":75},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":85},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":13436,"byte_end":13453,"line_start":227,"line_end":227,"column_start":8,"column_end":25},"name":"read_header_ident","qualname":"::header::read_header_ident","value":"pub fn read_header_ident(&[u8]) -> Result<IdentHeader, HeaderReadError>","parent":null,"children":[],"decl_id":null,"docs":"Reading the Identification header","sig":null,"attributes":[{"value":"*\nReading the Identification header\n\nIf it returns Err(sth) when being called with the first packet in a stream,\nthe whole stream is to be considered undecodable as per the Vorbis spec.\nThe function returns Err(`HeaderReadError::HeaderBadType`) if the header type\ndoesn't match the ident header.\n*/","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":13128,"byte_end":13428,"line_start":219,"line_end":226,"column_start":1,"column_end":3}}]},{"kind":"Struct","id":{"krate":0,"index":585},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":15580,"byte_end":15593,"line_start":296,"line_end":296,"column_start":12,"column_end":25},"name":"CommentHeader","qualname":"::header::CommentHeader","value":"CommentHeader { vendor, comment_list }","parent":null,"children":[{"krate":0,"index":586},{"krate":0,"index":587}],"decl_id":null,"docs":"Representation of the comment header","sig":null,"attributes":[{"value":"*\nRepresentation of the comment header\n\nThe comment header is the second of the three\nheaders inside each vorbis stream.\n\nIt contains text comment metadata\nabout the stream, encoded as key-value pairs,\nand the vendor name.\n*/","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":15296,"byte_end":15523,"line_start":285,"line_end":294,"column_start":1,"column_end":3}}]},{"kind":"Field","id":{"krate":0,"index":586},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":15690,"byte_end":15696,"line_start":300,"line_end":300,"column_start":6,"column_end":12},"name":"vendor","qualname":"::header::CommentHeader::vendor","value":"std::string::String","parent":{"krate":0,"index":585},"children":[],"decl_id":null,"docs":" An identification string of the\n software/library that encoded\n the stream.\n","sig":null,"attributes":[{"value":"/ An identification string of the","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":15597,"byte_end":15632,"line_start":297,"line_end":297,"column_start":2,"column_end":37}},{"value":"/ software/library that encoded","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":15634,"byte_end":15667,"line_start":298,"line_end":298,"column_start":2,"column_end":35}},{"value":"/ the stream.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":15669,"byte_end":15684,"line_start":299,"line_end":299,"column_start":2,"column_end":17}}]},{"kind":"Field","id":{"krate":0,"index":587},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":15778,"byte_end":15790,"line_start":303,"line_end":303,"column_start":6,"column_end":18},"name":"comment_list","qualname":"::header::CommentHeader::comment_list","value":"std::vec::Vec<(std::string::String, std::string::String)>","parent":{"krate":0,"index":585},"children":[],"decl_id":null,"docs":" A key-value list of the comments\n attached to the stream.\n","sig":null,"attributes":[{"value":"/ A key-value list of the comments","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":15707,"byte_end":15743,"line_start":301,"line_end":301,"column_start":2,"column_end":38}},{"value":"/ attached to the stream.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":15745,"byte_end":15772,"line_start":302,"line_end":302,"column_start":2,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":86},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":16081,"byte_end":16100,"line_start":315,"line_end":315,"column_start":8,"column_end":27},"name":"read_header_comment","qualname":"::header::read_header_comment","value":"pub fn read_header_comment(&[u8]) -> Result<CommentHeader, HeaderReadError>","parent":null,"children":[],"decl_id":null,"docs":"Reading the Comment header","sig":null,"attributes":[{"value":"*\nReading the Comment header\n\nYou should call this function with the second packet in the stream.\n\nThe function does not check whether the comment field names consist\nof characters `0x20` through `0x7D` (`0x3D` excluded), as the vorbis\nspec requires.\n*/","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":15818,"byte_end":16073,"line_start":306,"line_end":314,"column_start":1,"column_end":3}}]},{"kind":"Struct","id":{"krate":0,"index":145},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":20921,"byte_end":20932,"line_start":472,"line_end":472,"column_start":12,"column_end":23},"name":"SetupHeader","qualname":"::header::SetupHeader","value":"SetupHeader {  }","parent":null,"children":[{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":178},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":42281,"byte_end":42298,"line_start":1087,"line_end":1087,"column_start":8,"column_end":25},"name":"read_header_setup","qualname":"::header::read_header_setup","value":"pub fn read_header_setup(&[u8], u8, (u8, u8))\n-> Result<SetupHeader, HeaderReadError>","parent":null,"children":[],"decl_id":null,"docs":" Reading the setup header.","sig":null,"attributes":[{"value":"/ Reading the setup header.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":42133,"byte_end":42162,"line_start":1083,"line_end":1083,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":42163,"byte_end":42166,"line_start":1084,"line_end":1084,"column_start":1,"column_end":4}},{"value":"/ The audio channel and blocksize info needed by the function","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":42167,"byte_end":42230,"line_start":1085,"line_end":1085,"column_start":1,"column_end":64}},{"value":"/ can be obtained from the ident header.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":42231,"byte_end":42273,"line_start":1086,"line_end":1086,"column_start":1,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":603},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/huffman_tree.rs","byte_start":52708,"byte_end":52721,"line_start":128,"line_end":128,"column_start":2,"column_end":15},"name":"Overspecified","qualname":"::huffman_tree::HuffmanError::Overspecified","value":"HuffmanError::Overspecified","parent":{"krate":0,"index":602},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":605},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/huffman_tree.rs","byte_start":52724,"byte_end":52738,"line_start":129,"line_end":129,"column_start":2,"column_end":16},"name":"Underpopulated","qualname":"::huffman_tree::HuffmanError::Underpopulated","value":"HuffmanError::Underpopulated","parent":{"krate":0,"index":602},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":607},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/huffman_tree.rs","byte_start":52741,"byte_end":52759,"line_start":130,"line_end":130,"column_start":2,"column_end":20},"name":"InvalidSingleEntry","qualname":"::huffman_tree::HuffmanError::InvalidSingleEntry","value":"HuffmanError::InvalidSingleEntry","parent":{"krate":0,"index":602},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":602},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/huffman_tree.rs","byte_start":52692,"byte_end":52704,"line_start":127,"line_end":127,"column_start":10,"column_end":22},"name":"HuffmanError","qualname":"::huffman_tree::HuffmanError","value":"pub enum HuffmanError { Overspecified, Underpopulated, InvalidSingleEntry, }","parent":null,"children":[{"krate":0,"index":603},{"krate":0,"index":605},{"krate":0,"index":607}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":283},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/audio.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"audio","qualname":"::audio","value":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/audio.rs","parent":null,"children":[{"krate":0,"index":284},{"krate":0,"index":287},{"krate":0,"index":290},{"krate":0,"index":293},{"krate":0,"index":296},{"krate":0,"index":299},{"krate":0,"index":302},{"krate":0,"index":305},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":312},{"krate":0,"index":315},{"krate":0,"index":318},{"krate":0,"index":321},{"krate":0,"index":324},{"krate":0,"index":327},{"krate":0,"index":330},{"krate":0,"index":333},{"krate":0,"index":336},{"krate":0,"index":624},{"krate":0,"index":633},{"krate":0,"index":635},{"krate":0,"index":636},{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":339},{"krate":0,"index":341},{"krate":0,"index":344},{"krate":0,"index":346},{"krate":0,"index":359},{"krate":0,"index":362},{"krate":0,"index":367},{"krate":0,"index":369},{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":379},{"krate":0,"index":381},{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":392},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":399},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":408},{"krate":0,"index":410},{"krate":0,"index":413},{"krate":0,"index":419}],"decl_id":null,"docs":"Audio packet decoding","sig":null,"attributes":[{"value":"*\nAudio packet decoding\n\nThis module decodes the audio packets given to it.\n*/","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/audio.rs","byte_start":86533,"byte_end":86613,"line_start":9,"line_end":13,"column_start":1,"column_end":3}}]},{"kind":"TupleVariant","id":{"krate":0,"index":625},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/audio.rs","byte_start":86991,"byte_end":87002,"line_start":30,"line_end":30,"column_start":2,"column_end":13},"name":"EndOfPacket","qualname":"::audio::AudioReadError::EndOfPacket","value":"AudioReadError::EndOfPacket","parent":{"krate":0,"index":624},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":627},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/audio.rs","byte_start":87005,"byte_end":87019,"line_start":31,"line_end":31,"column_start":2,"column_end":16},"name":"AudioBadFormat","qualname":"::audio::AudioReadError::AudioBadFormat","value":"AudioReadError::AudioBadFormat","parent":{"krate":0,"index":624},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":629},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/audio.rs","byte_start":87022,"byte_end":87035,"line_start":32,"line_end":32,"column_start":2,"column_end":15},"name":"AudioIsHeader","qualname":"::audio::AudioReadError::AudioIsHeader","value":"AudioReadError::AudioIsHeader","parent":{"krate":0,"index":624},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":631},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/audio.rs","byte_start":87494,"byte_end":87514,"line_start":42,"line_end":42,"column_start":2,"column_end":22},"name":"BufferNotAddressable","qualname":"::audio::AudioReadError::BufferNotAddressable","value":"AudioReadError::BufferNotAddressable","parent":{"krate":0,"index":624},"children":[],"decl_id":null,"docs":" If the needed memory isn't addressable by us","sig":null,"attributes":[{"value":"/ If the needed memory isn't addressable by us","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/audio.rs","byte_start":87038,"byte_end":87086,"line_start":33,"line_end":33,"column_start":2,"column_end":50}},{"value":"/","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/audio.rs","byte_start":87088,"byte_end":87091,"line_start":34,"line_end":34,"column_start":2,"column_end":5}},{"value":"/ This error is returned if a calculation yielded a higher value for","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/audio.rs","byte_start":87093,"byte_end":87163,"line_start":35,"line_end":35,"column_start":2,"column_end":72}},{"value":"/ an internal buffer size that doesn't fit into the platform's address range.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/audio.rs","byte_start":87165,"byte_end":87244,"line_start":36,"line_end":36,"column_start":2,"column_end":81}},{"value":"/ Note that if we \"simply\" encounter an allocation failure (OOM, etc),","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/audio.rs","byte_start":87246,"byte_end":87318,"line_start":37,"line_end":37,"column_start":2,"column_end":74}},{"value":"/ we do what libstd does in these cases: crash.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/audio.rs","byte_start":87320,"byte_end":87369,"line_start":38,"line_end":38,"column_start":2,"column_end":51}},{"value":"/","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/audio.rs","byte_start":87371,"byte_end":87374,"line_start":39,"line_end":39,"column_start":2,"column_end":5}},{"value":"/ This error is not automatically an error of the format,","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/audio.rs","byte_start":87376,"byte_end":87435,"line_start":40,"line_end":40,"column_start":2,"column_end":61}},{"value":"/ but rather is due to insufficient decoder hardware.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/audio.rs","byte_start":87437,"byte_end":87492,"line_start":41,"line_end":41,"column_start":2,"column_end":57}}]},{"kind":"Enum","id":{"krate":0,"index":624},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/audio.rs","byte_start":86973,"byte_end":86987,"line_start":29,"line_end":29,"column_start":10,"column_end":24},"name":"AudioReadError","qualname":"::audio::AudioReadError","value":"pub enum AudioReadError {\n    EndOfPacket,\n    AudioBadFormat,\n    AudioIsHeader,\n    BufferNotAddressable,\n}","parent":null,"children":[{"krate":0,"index":625},{"krate":0,"index":627},{"krate":0,"index":629},{"krate":0,"index":631}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":406},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/audio.rs","byte_start":113972,"byte_end":113991,"line_start":855,"line_end":855,"column_start":12,"column_end":31},"name":"PreviousWindowRight","qualname":"::audio::PreviousWindowRight","value":"PreviousWindowRight {  }","parent":null,"children":[{"krate":0,"index":407}],"decl_id":null,"docs":" The right part of the previous window","sig":null,"attributes":[{"value":"/ The right part of the previous window","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/audio.rs","byte_start":113832,"byte_end":113873,"line_start":851,"line_end":851,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/audio.rs","byte_start":113874,"byte_end":113877,"line_start":852,"line_end":852,"column_start":1,"column_end":4}},{"value":"/ This is the only state that needs to be changed","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/audio.rs","byte_start":113878,"byte_end":113929,"line_start":853,"line_end":853,"column_start":1,"column_end":52}},{"value":"/ once the headers are read.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/audio.rs","byte_start":113930,"byte_end":113960,"line_start":854,"line_end":854,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":409},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/audio.rs","byte_start":114097,"byte_end":114100,"line_start":861,"line_end":861,"column_start":9,"column_end":12},"name":"new","qualname":"<PreviousWindowRight>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":410},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/audio.rs","byte_start":114328,"byte_end":114352,"line_start":871,"line_end":871,"column_start":8,"column_end":32},"name":"get_decoded_sample_count","qualname":"::audio::get_decoded_sample_count","value":"pub fn get_decoded_sample_count(&IdentHeader, &SetupHeader, &[u8])\n-> Result<usize, AudioReadError>","parent":null,"children":[],"decl_id":null,"docs":"Returns the per-channel sample count of a packet if it were decoded.","sig":null,"attributes":[{"value":"*\nReturns the per-channel sample count of a packet if it were decoded.\n\nThis operation is very cheap and doesn't involve actual decoding of the packet.\n*/","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/audio.rs","byte_start":114164,"byte_end":114320,"line_start":866,"line_end":870,"column_start":1,"column_end":3}}]},{"kind":"Function","id":{"krate":0,"index":413},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/audio.rs","byte_start":115936,"byte_end":115961,"line_start":917,"line_end":917,"column_start":8,"column_end":33},"name":"read_audio_packet_generic","qualname":"::audio::read_audio_packet_generic","value":"pub fn read_audio_packet_generic<S: Samples>(&IdentHeader, &SetupHeader,\n                                             &[u8], &mut PreviousWindowRight)\n-> Result<S, AudioReadError>","parent":null,"children":[],"decl_id":null,"docs":"Main audio packet decoding function","sig":null,"attributes":[{"value":"allow(unused_variables)","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/audio.rs","byte_start":115694,"byte_end":115720,"line_start":908,"line_end":908,"column_start":1,"column_end":27}},{"value":"*\nMain audio packet decoding function\n\nPass your info to this function to get your raw packet data decoded.\n\nPanics if the passed PreviousWindowRight struct doesn't match the info\nfrom the ident header.\n*/","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/audio.rs","byte_start":115721,"byte_end":115928,"line_start":909,"line_end":916,"column_start":1,"column_end":3}}]},{"kind":"Function","id":{"krate":0,"index":419},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/audio.rs","byte_start":124628,"byte_end":124645,"line_start":1169,"line_end":1169,"column_start":8,"column_end":25},"name":"read_audio_packet","qualname":"::audio::read_audio_packet","value":"pub fn read_audio_packet(&IdentHeader, &SetupHeader, &[u8],\n                         &mut PreviousWindowRight)\n-> Result<Vec<Vec<i16>>, AudioReadError>","parent":null,"children":[],"decl_id":null,"docs":"Main audio packet decoding function","sig":null,"attributes":[{"value":"*\nMain audio packet decoding function\n\nPass your info to this function to get your raw packet data decoded.\n\nPanics if the passed PreviousWindowRight struct doesn't match the info\nfrom the ident header.\n*/","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/audio.rs","byte_start":124413,"byte_end":124620,"line_start":1161,"line_end":1168,"column_start":1,"column_end":3}}]},{"kind":"Mod","id":{"krate":0,"index":452},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/inside_ogg.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"inside_ogg","qualname":"::inside_ogg","value":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/inside_ogg.rs","parent":null,"children":[{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":457},{"krate":0,"index":460},{"krate":0,"index":461},{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":468},{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":475},{"krate":0,"index":478},{"krate":0,"index":481},{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":488},{"krate":0,"index":491},{"krate":0,"index":494},{"krate":0,"index":503}],"decl_id":null,"docs":"Higher-level utilities for Ogg streams and files","sig":null,"attributes":[{"value":"cfg(feature = \"ogg\")","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/lib.rs","byte_start":1990,"byte_end":2013,"line_start":93,"line_end":93,"column_start":1,"column_end":24}},{"value":"*\nHigher-level utilities for Ogg streams and files\n\nThis module provides higher level access to the library functionality,\nand useful helper methods for the Ogg `PacketReader` struct.\n*/","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/inside_ogg.rs","byte_start":145749,"byte_end":145937,"line_start":9,"line_end":14,"column_start":1,"column_end":3}}]},{"kind":"Function","id":{"krate":0,"index":491},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/inside_ogg.rs","byte_start":146476,"byte_end":146488,"line_start":30,"line_end":30,"column_start":8,"column_end":20},"name":"read_headers","qualname":"::inside_ogg::read_headers","value":"pub fn read_headers<'a, T: Read + Seek + 'a>(&mut PacketReader<T>)\n-> Result<(HeaderSet, u32), VorbisError>","parent":null,"children":[],"decl_id":null,"docs":" Reads the three vorbis headers from an ogg stream as well as stream serial information","sig":null,"attributes":[{"value":"/ Reads the three vorbis headers from an ogg stream as well as stream serial information","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/inside_ogg.rs","byte_start":146186,"byte_end":146276,"line_start":25,"line_end":25,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/inside_ogg.rs","byte_start":146277,"byte_end":146280,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Please note that this function doesn't work well with async","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/inside_ogg.rs","byte_start":146281,"byte_end":146344,"line_start":27,"line_end":27,"column_start":1,"column_end":64}},{"value":"/ I/O. In order to support this use case, enable the `async_ogg` feature,","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/inside_ogg.rs","byte_start":146345,"byte_end":146420,"line_start":28,"line_end":28,"column_start":1,"column_end":76}},{"value":"/ and use the `HeadersReader` struct instead.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/inside_ogg.rs","byte_start":146421,"byte_end":146468,"line_start":29,"line_end":29,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":494},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/inside_ogg.rs","byte_start":147722,"byte_end":147737,"line_start":66,"line_end":66,"column_start":12,"column_end":27},"name":"OggStreamReader","qualname":"::inside_ogg::OggStreamReader","value":"OggStreamReader { ident_hdr, comment_hdr, setup_hdr }","parent":null,"children":[{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":502}],"decl_id":null,"docs":"Reading ogg/vorbis files or streams","sig":null,"attributes":[{"value":"*\nReading ogg/vorbis files or streams\n\nThis is a small helper struct to help reading ogg/vorbis files\nor streams in that format.\n\nIt only supports the main use case of pure audio ogg files streams.\nReading a file where vorbis is only one of multiple streams, like\nin the case of ogv, is not supported.\n\nIf you need support for this, you need to use the lower level methods\ninstead.\n*/","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/inside_ogg.rs","byte_start":147324,"byte_end":147710,"line_start":53,"line_end":65,"column_start":1,"column_end":3}}]},{"kind":"Field","id":{"krate":0,"index":499},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/inside_ogg.rs","byte_start":147834,"byte_end":147843,"line_start":72,"line_end":72,"column_start":6,"column_end":15},"name":"ident_hdr","qualname":"::inside_ogg::OggStreamReader::ident_hdr","value":"header::IdentHeader","parent":{"krate":0,"index":494},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":500},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/inside_ogg.rs","byte_start":147863,"byte_end":147874,"line_start":73,"line_end":73,"column_start":6,"column_end":17},"name":"comment_hdr","qualname":"::inside_ogg::OggStreamReader::comment_hdr","value":"header::CommentHeader","parent":{"krate":0,"index":494},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":501},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/inside_ogg.rs","byte_start":147896,"byte_end":147905,"line_start":74,"line_end":74,"column_start":6,"column_end":15},"name":"setup_hdr","qualname":"::inside_ogg::OggStreamReader::setup_hdr","value":"header::SetupHeader","parent":{"krate":0,"index":494},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":505},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/inside_ogg.rs","byte_start":148279,"byte_end":148282,"line_start":85,"line_end":85,"column_start":9,"column_end":12},"name":"new","qualname":"<OggStreamReader<T>>::new","value":"pub fn new(T) -> Result<Self, VorbisError>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new OggStreamReader from a given implementation of `Read + Seek`.","sig":null,"attributes":[{"value":"/ Constructs a new OggStreamReader from a given implementation of `Read + Seek`.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/inside_ogg.rs","byte_start":147992,"byte_end":148074,"line_start":80,"line_end":80,"column_start":2,"column_end":84}},{"value":"/","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/inside_ogg.rs","byte_start":148076,"byte_end":148079,"line_start":81,"line_end":81,"column_start":2,"column_end":5}},{"value":"/ Please note that this function doesn't work well with async","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/inside_ogg.rs","byte_start":148081,"byte_end":148144,"line_start":82,"line_end":82,"column_start":2,"column_end":65}},{"value":"/ I/O. In order to support this use case, enable the `async_ogg` feature,","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/inside_ogg.rs","byte_start":148146,"byte_end":148221,"line_start":83,"line_end":83,"column_start":2,"column_end":77}},{"value":"/ and use the `HeadersReader` struct instead.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/inside_ogg.rs","byte_start":148223,"byte_end":148270,"line_start":84,"line_end":84,"column_start":2,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":506},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/inside_ogg.rs","byte_start":148767,"byte_end":148782,"line_start":97,"line_end":97,"column_start":9,"column_end":24},"name":"from_ogg_reader","qualname":"<OggStreamReader<T>>::from_ogg_reader","value":"pub fn from_ogg_reader(PacketReader<T>) -> Result<Self, VorbisError>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new OggStreamReader from a given Ogg PacketReader.","sig":null,"attributes":[{"value":"/ Constructs a new OggStreamReader from a given Ogg PacketReader.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/inside_ogg.rs","byte_start":148388,"byte_end":148455,"line_start":89,"line_end":89,"column_start":2,"column_end":69}},{"value":"/","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/inside_ogg.rs","byte_start":148457,"byte_end":148460,"line_start":90,"line_end":90,"column_start":2,"column_end":5}},{"value":"/ The `new` function is a nice wrapper around this function that","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/inside_ogg.rs","byte_start":148462,"byte_end":148528,"line_start":91,"line_end":91,"column_start":2,"column_end":68}},{"value":"/ also creates the ogg reader.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/inside_ogg.rs","byte_start":148530,"byte_end":148562,"line_start":92,"line_end":92,"column_start":2,"column_end":34}},{"value":"/","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/inside_ogg.rs","byte_start":148564,"byte_end":148567,"line_start":93,"line_end":93,"column_start":2,"column_end":5}},{"value":"/ Please note that this function doesn't work well with async","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/inside_ogg.rs","byte_start":148569,"byte_end":148632,"line_start":94,"line_end":94,"column_start":2,"column_end":65}},{"value":"/ I/O. In order to support this use case, enable the `async_ogg` feature,","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/inside_ogg.rs","byte_start":148634,"byte_end":148709,"line_start":95,"line_end":95,"column_start":2,"column_end":77}},{"value":"/ and use the `HeadersReader` struct instead.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/inside_ogg.rs","byte_start":148711,"byte_end":148758,"line_start":96,"line_end":96,"column_start":2,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":507},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/inside_ogg.rs","byte_start":149112,"byte_end":149122,"line_start":111,"line_end":111,"column_start":9,"column_end":19},"name":"into_inner","qualname":"<OggStreamReader<T>>::into_inner","value":"pub fn into_inner(Self) -> PacketReader<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":509},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/inside_ogg.rs","byte_start":151007,"byte_end":151022,"line_start":167,"line_end":167,"column_start":9,"column_end":24},"name":"read_dec_packet","qualname":"<OggStreamReader<T>>::read_dec_packet","value":"pub fn read_dec_packet(&mut Self)\n-> Result<Option<Vec<Vec<i16>>>, VorbisError>","parent":null,"children":[],"decl_id":null,"docs":" Reads and decompresses an audio packet from the stream.","sig":null,"attributes":[{"value":"/ Reads and decompresses an audio packet from the stream.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/inside_ogg.rs","byte_start":150714,"byte_end":150773,"line_start":160,"line_end":160,"column_start":2,"column_end":61}},{"value":"/","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/inside_ogg.rs","byte_start":150775,"byte_end":150778,"line_start":161,"line_end":161,"column_start":2,"column_end":5}},{"value":"/ On read errors, it returns Err(e) with the error.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/inside_ogg.rs","byte_start":150780,"byte_end":150833,"line_start":162,"line_end":162,"column_start":2,"column_end":55}},{"value":"/","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/inside_ogg.rs","byte_start":150835,"byte_end":150838,"line_start":163,"line_end":163,"column_start":2,"column_end":5}},{"value":"/ On success, it either returns None, when the end of the","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/inside_ogg.rs","byte_start":150840,"byte_end":150899,"line_start":164,"line_end":164,"column_start":2,"column_end":61}},{"value":"/ stream has been reached, or Some(packet_data),","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/inside_ogg.rs","byte_start":150901,"byte_end":150951,"line_start":165,"line_end":165,"column_start":2,"column_end":52}},{"value":"/ with the data of the decompressed packet.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/inside_ogg.rs","byte_start":150953,"byte_end":150998,"line_start":166,"line_end":166,"column_start":2,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":510},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/inside_ogg.rs","byte_start":151452,"byte_end":151475,"line_start":179,"line_end":179,"column_start":9,"column_end":32},"name":"read_dec_packet_generic","qualname":"<OggStreamReader<T>>::read_dec_packet_generic","value":"pub fn read_dec_packet_generic<S: Samples>(&mut Self)\n-> Result<Option<S>, VorbisError>","parent":null,"children":[],"decl_id":null,"docs":" Reads and decompresses an audio packet from the stream (generic).","sig":null,"attributes":[{"value":"/ Reads and decompresses an audio packet from the stream (generic).","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/inside_ogg.rs","byte_start":151149,"byte_end":151218,"line_start":172,"line_end":172,"column_start":2,"column_end":71}},{"value":"/","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/inside_ogg.rs","byte_start":151220,"byte_end":151223,"line_start":173,"line_end":173,"column_start":2,"column_end":5}},{"value":"/ On read errors, it returns Err(e) with the error.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/inside_ogg.rs","byte_start":151225,"byte_end":151278,"line_start":174,"line_end":174,"column_start":2,"column_end":55}},{"value":"/","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/inside_ogg.rs","byte_start":151280,"byte_end":151283,"line_start":175,"line_end":175,"column_start":2,"column_end":5}},{"value":"/ On success, it either returns None, when the end of the","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/inside_ogg.rs","byte_start":151285,"byte_end":151344,"line_start":176,"line_end":176,"column_start":2,"column_end":61}},{"value":"/ stream has been reached, or Some(packet_data),","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/inside_ogg.rs","byte_start":151346,"byte_end":151396,"line_start":177,"line_end":177,"column_start":2,"column_end":52}},{"value":"/ with the data of the decompressed packet.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/inside_ogg.rs","byte_start":151398,"byte_end":151443,"line_start":178,"line_end":178,"column_start":2,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":512},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/inside_ogg.rs","byte_start":152801,"byte_end":152820,"line_start":215,"line_end":215,"column_start":9,"column_end":28},"name":"read_dec_packet_itl","qualname":"<OggStreamReader<T>>::read_dec_packet_itl","value":"pub fn read_dec_packet_itl(&mut Self) -> Result<Option<Vec<i16>>, VorbisError>","parent":null,"children":[],"decl_id":null,"docs":" Reads and decompresses an audio packet from the stream (interleaved).","sig":null,"attributes":[{"value":"/ Reads and decompresses an audio packet from the stream (interleaved).","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/inside_ogg.rs","byte_start":152406,"byte_end":152479,"line_start":205,"line_end":205,"column_start":2,"column_end":75}},{"value":"/","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/inside_ogg.rs","byte_start":152481,"byte_end":152484,"line_start":206,"line_end":206,"column_start":2,"column_end":5}},{"value":"/ On read errors, it returns Err(e) with the error.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/inside_ogg.rs","byte_start":152486,"byte_end":152539,"line_start":207,"line_end":207,"column_start":2,"column_end":55}},{"value":"/","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/inside_ogg.rs","byte_start":152541,"byte_end":152544,"line_start":208,"line_end":208,"column_start":2,"column_end":5}},{"value":"/ On success, it either returns None, when the end of the","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/inside_ogg.rs","byte_start":152546,"byte_end":152605,"line_start":209,"line_end":209,"column_start":2,"column_end":61}},{"value":"/ stream has been reached, or Some(packet_data),","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/inside_ogg.rs","byte_start":152607,"byte_end":152657,"line_start":210,"line_end":210,"column_start":2,"column_end":52}},{"value":"/ with the data of the decompressed packet.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/inside_ogg.rs","byte_start":152659,"byte_end":152704,"line_start":211,"line_end":211,"column_start":2,"column_end":47}},{"value":"/","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/inside_ogg.rs","byte_start":152706,"byte_end":152709,"line_start":212,"line_end":212,"column_start":2,"column_end":5}},{"value":"/ Unlike `read_dec_packet`, this function returns the","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/inside_ogg.rs","byte_start":152711,"byte_end":152766,"line_start":213,"line_end":213,"column_start":2,"column_end":57}},{"value":"/ interleaved samples.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/inside_ogg.rs","byte_start":152768,"byte_end":152792,"line_start":214,"line_end":214,"column_start":2,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":513},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/inside_ogg.rs","byte_start":153182,"byte_end":153195,"line_start":227,"line_end":227,"column_start":9,"column_end":22},"name":"stream_serial","qualname":"<OggStreamReader<T>>::stream_serial","value":"pub fn stream_serial(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the stream serial of the current stream","sig":null,"attributes":[{"value":"/ Returns the stream serial of the current stream","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/inside_ogg.rs","byte_start":153061,"byte_end":153112,"line_start":224,"line_end":224,"column_start":2,"column_end":53}},{"value":"/","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/inside_ogg.rs","byte_start":153114,"byte_end":153117,"line_start":225,"line_end":225,"column_start":2,"column_end":5}},{"value":"/ The stream serial can change in chained ogg files.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/inside_ogg.rs","byte_start":153119,"byte_end":153173,"line_start":226,"line_end":226,"column_start":2,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":514},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/inside_ogg.rs","byte_start":153442,"byte_end":153456,"line_start":235,"line_end":235,"column_start":9,"column_end":23},"name":"get_last_absgp","qualname":"<OggStreamReader<T>>::get_last_absgp","value":"pub fn get_last_absgp(&Self) -> Option<u64>","parent":null,"children":[],"decl_id":null,"docs":" Returns the absolute granule position of the last read page.","sig":null,"attributes":[{"value":"/ Returns the absolute granule position of the last read page.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/inside_ogg.rs","byte_start":153238,"byte_end":153302,"line_start":231,"line_end":231,"column_start":2,"column_end":66}},{"value":"/","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/inside_ogg.rs","byte_start":153304,"byte_end":153307,"line_start":232,"line_end":232,"column_start":2,"column_end":5}},{"value":"/ In the case of ogg/vorbis, the absolute granule position is given","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/inside_ogg.rs","byte_start":153309,"byte_end":153378,"line_start":233,"line_end":233,"column_start":2,"column_end":71}},{"value":"/ as number of PCM samples, on a per channel basis.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/inside_ogg.rs","byte_start":153380,"byte_end":153433,"line_start":234,"line_end":234,"column_start":2,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/inside_ogg.rs","byte_start":153820,"byte_end":153833,"line_start":246,"line_end":246,"column_start":9,"column_end":22},"name":"seek_absgp_pg","qualname":"<OggStreamReader<T>>::seek_absgp_pg","value":"pub fn seek_absgp_pg(&mut Self, u64) -> Result<(), VorbisError>","parent":null,"children":[],"decl_id":null,"docs":" Seeks to the specified absolute granule position, with a page granularity.","sig":null,"attributes":[{"value":"/ Seeks to the specified absolute granule position, with a page granularity.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/inside_ogg.rs","byte_start":153503,"byte_end":153581,"line_start":239,"line_end":239,"column_start":2,"column_end":80}},{"value":"/","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/inside_ogg.rs","byte_start":153583,"byte_end":153586,"line_start":240,"line_end":240,"column_start":2,"column_end":5}},{"value":"/ The granularity is per-page, and the obtained position is","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/inside_ogg.rs","byte_start":153588,"byte_end":153649,"line_start":241,"line_end":241,"column_start":2,"column_end":63}},{"value":"/ then <= the seeked absgp.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/inside_ogg.rs","byte_start":153651,"byte_end":153680,"line_start":242,"line_end":242,"column_start":2,"column_end":31}},{"value":"/","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/inside_ogg.rs","byte_start":153682,"byte_end":153685,"line_start":243,"line_end":243,"column_start":2,"column_end":5}},{"value":"/ In the case of ogg/vorbis, the absolute granule position is given","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/inside_ogg.rs","byte_start":153687,"byte_end":153756,"line_start":244,"line_end":244,"column_start":2,"column_end":71}},{"value":"/ as number of PCM samples, on a per channel basis.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/inside_ogg.rs","byte_start":153758,"byte_end":153811,"line_start":245,"line_end":245,"column_start":2,"column_end":55}}]},{"kind":"Mod","id":{"krate":0,"index":516},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/samples.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"samples","qualname":"::samples","value":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/samples.rs","parent":null,"children":[{"krate":0,"index":517},{"krate":0,"index":521},{"krate":0,"index":527},{"krate":0,"index":531},{"krate":0,"index":536},{"krate":0,"index":538},{"krate":0,"index":540}],"decl_id":null,"docs":"Traits for sample formats\n","sig":null,"attributes":[{"value":"*\nTraits for sample formats\n*/","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/samples.rs","byte_start":158478,"byte_end":158510,"line_start":9,"line_end":11,"column_start":1,"column_end":3}}]},{"kind":"Trait","id":{"krate":0,"index":517},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/samples.rs","byte_start":158565,"byte_end":158572,"line_start":14,"line_end":14,"column_start":11,"column_end":18},"name":"Samples","qualname":"::samples::Samples","value":"Samples","parent":null,"children":[{"krate":0,"index":518},{"krate":0,"index":519},{"krate":0,"index":520}],"decl_id":null,"docs":" Trait for a packet of multiple samples\n","sig":null,"attributes":[{"value":"/ Trait for a packet of multiple samples","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/samples.rs","byte_start":158512,"byte_end":158554,"line_start":13,"line_end":13,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":518},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/samples.rs","byte_start":158579,"byte_end":158590,"line_start":15,"line_end":15,"column_start":5,"column_end":16},"name":"num_samples","qualname":"::samples::Samples::num_samples","value":"pub fn num_samples(&Self) -> usize","parent":{"krate":0,"index":517},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":519},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/samples.rs","byte_start":158612,"byte_end":158620,"line_start":16,"line_end":16,"column_start":5,"column_end":13},"name":"truncate","qualname":"::samples::Samples::truncate","value":"pub fn truncate(&mut Self, usize)","parent":{"krate":0,"index":517},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":520},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/samples.rs","byte_start":158651,"byte_end":158662,"line_start":17,"line_end":17,"column_start":5,"column_end":16},"name":"from_floats","qualname":"::samples::Samples::from_floats","value":"pub fn from_floats(Vec<Vec<f32>>) -> Self","parent":{"krate":0,"index":517},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":527},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/samples.rs","byte_start":159163,"byte_end":159181,"line_start":43,"line_end":43,"column_start":12,"column_end":30},"name":"InterleavedSamples","qualname":"::samples::InterleavedSamples","value":"InterleavedSamples { samples, channel_count }","parent":null,"children":[{"krate":0,"index":529},{"krate":0,"index":530}],"decl_id":null,"docs":" A packet of multi-channel interleaved samples\n","sig":null,"attributes":[{"value":"/ A packet of multi-channel interleaved samples","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/samples.rs","byte_start":159102,"byte_end":159151,"line_start":42,"line_end":42,"column_start":1,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":529},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/samples.rs","byte_start":159200,"byte_end":159207,"line_start":44,"line_end":44,"column_start":6,"column_end":13},"name":"samples","qualname":"::samples::InterleavedSamples::samples","value":"std::vec::Vec<S>","parent":{"krate":0,"index":527},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":530},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/samples.rs","byte_start":159222,"byte_end":159235,"line_start":45,"line_end":45,"column_start":6,"column_end":19},"name":"channel_count","qualname":"::samples::InterleavedSamples::channel_count","value":"usize","parent":{"krate":0,"index":527},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":536},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/samples.rs","byte_start":160239,"byte_end":160245,"line_start":82,"line_end":82,"column_start":11,"column_end":17},"name":"Sample","qualname":"::samples::Sample","value":"Sample","parent":null,"children":[{"krate":0,"index":537}],"decl_id":null,"docs":" Trait representing a single sample\n","sig":null,"attributes":[{"value":"/ Trait representing a single sample","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/samples.rs","byte_start":160190,"byte_end":160228,"line_start":81,"line_end":81,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":537},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/samples.rs","byte_start":160252,"byte_end":160262,"line_start":83,"line_end":83,"column_start":5,"column_end":15},"name":"from_float","qualname":"::samples::Sample::from_float","value":"pub fn from_float(f32) -> Self","parent":{"krate":0,"index":536},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":664},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/lib.rs","byte_start":2205,"byte_end":2213,"line_start":104,"line_end":104,"column_start":2,"column_end":10},"name":"BadAudio","qualname":"::VorbisError::BadAudio","value":"VorbisError::BadAudio(audio::AudioReadError)","parent":{"krate":0,"index":663},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":667},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/lib.rs","byte_start":2239,"byte_end":2248,"line_start":105,"line_end":105,"column_start":2,"column_end":11},"name":"BadHeader","qualname":"::VorbisError::BadHeader","value":"VorbisError::BadHeader(header::HeaderReadError)","parent":{"krate":0,"index":663},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":670},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/lib.rs","byte_start":2301,"byte_end":2309,"line_start":107,"line_end":107,"column_start":2,"column_end":10},"name":"OggError","qualname":"::VorbisError::OggError","value":"VorbisError::OggError(OggReadError)","parent":{"krate":0,"index":663},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"ogg\")","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/lib.rs","byte_start":2276,"byte_end":2299,"line_start":106,"line_end":106,"column_start":2,"column_end":25}}]},{"kind":"Enum","id":{"krate":0,"index":663},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/lib.rs","byte_start":2190,"byte_end":2201,"line_start":103,"line_end":103,"column_start":10,"column_end":21},"name":"VorbisError","qualname":"::VorbisError","value":"pub enum VorbisError {\n    BadAudio(audio::AudioReadError),\n    BadHeader(header::HeaderReadError),\n    OggError(OggReadError),\n}","parent":null,"children":[{"krate":0,"index":664},{"krate":0,"index":667},{"krate":0,"index":670}],"decl_id":null,"docs":" Errors that can occur during decoding\n","sig":null,"attributes":[{"value":"/ Errors that can occur during decoding","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/lib.rs","byte_start":2122,"byte_end":2163,"line_start":101,"line_end":101,"column_start":1,"column_end":42}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":8502,"byte_end":8517,"line_start":68,"line_end":68,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":58}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":8622,"byte_end":8637,"line_start":74,"line_end":74,"column_start":29,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":60}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":8749,"byte_end":8764,"line_start":80,"line_end":80,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":9012,"byte_end":9027,"line_start":89,"line_end":89,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":9141,"byte_end":9156,"line_start":95,"line_end":95,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":66},{"krate":0,"index":67}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":9883,"byte_end":9898,"line_start":114,"line_end":114,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":19912,"byte_end":19923,"line_start":434,"line_end":434,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":141},{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":23339,"byte_end":23352,"line_start":547,"line_end":547,"column_start":11,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header_cached.rs","byte_start":45287,"byte_end":45309,"line_start":31,"line_end":31,"column_start":6,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":189}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/huffman_tree.rs","byte_start":50766,"byte_end":50774,"line_start":64,"line_end":64,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":203}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/huffman_tree.rs","byte_start":54247,"byte_end":54264,"line_start":176,"line_end":176,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":219},{"krate":0,"index":225},{"krate":0,"index":227}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/huffman_tree.rs","byte_start":60257,"byte_end":60274,"line_start":346,"line_end":346,"column_start":10,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/audio.rs","byte_start":87671,"byte_end":87685,"line_start":48,"line_end":48,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/audio.rs","byte_start":87782,"byte_end":87796,"line_start":54,"line_end":54,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":342},{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/audio.rs","byte_start":88231,"byte_end":88245,"line_start":69,"line_end":69,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":345}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/audio.rs","byte_start":88505,"byte_end":88517,"line_start":81,"line_end":81,"column_start":11,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":361}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/audio.rs","byte_start":88703,"byte_end":88719,"line_start":95,"line_end":95,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":368}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/audio.rs","byte_start":88909,"byte_end":88925,"line_start":103,"line_end":103,"column_start":33,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":370}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/audio.rs","byte_start":114032,"byte_end":114051,"line_start":859,"line_end":859,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":409}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/bitpacking.rs","byte_start":138166,"byte_end":138179,"line_start":361,"line_end":361,"column_start":11,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":446},{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":645},{"krate":0,"index":646},{"krate":0,"index":647},{"krate":0,"index":648},{"krate":0,"index":649},{"krate":0,"index":650},{"krate":0,"index":651},{"krate":0,"index":652},{"krate":0,"index":447},{"krate":0,"index":653},{"krate":0,"index":654},{"krate":0,"index":655},{"krate":0,"index":656},{"krate":0,"index":657},{"krate":0,"index":658},{"krate":0,"index":659},{"krate":0,"index":660},{"krate":0,"index":661},{"krate":0,"index":662},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":451}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/inside_ogg.rs","byte_start":147970,"byte_end":147985,"line_start":79,"line_end":79,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":508},{"krate":0,"index":509},{"krate":0,"index":510},{"krate":0,"index":512},{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":515}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/samples.rs","byte_start":158726,"byte_end":158729,"line_start":20,"line_end":20,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":523},{"krate":0,"index":524},{"krate":0,"index":525}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/samples.rs","byte_start":159275,"byte_end":159293,"line_start":48,"line_end":48,"column_start":29,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":533},{"krate":0,"index":534},{"krate":0,"index":535}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/lib.rs","byte_start":2355,"byte_end":2366,"line_start":110,"line_end":110,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":546},{"krate":0,"index":547}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/lib.rs","byte_start":2742,"byte_end":2753,"line_start":125,"line_end":125,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":549}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/lib.rs","byte_start":2936,"byte_end":2947,"line_start":131,"line_end":131,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":551}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/lib.rs","byte_start":3078,"byte_end":3089,"line_start":137,"line_end":137,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":553}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/lib.rs","byte_start":3236,"byte_end":3247,"line_start":144,"line_end":144,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":555}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/lib.rs","byte_start":1874,"byte_end":1880,"line_start":85,"line_end":85,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":10}},{"kind":"Mod","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/lib.rs","byte_start":1967,"byte_end":1972,"line_start":91,"line_end":91,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":283}},{"kind":"Mod","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/lib.rs","byte_start":2022,"byte_end":2032,"line_start":94,"line_end":94,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":452}},{"kind":"Mod","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/lib.rs","byte_start":2042,"byte_end":2049,"line_start":95,"line_end":95,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":516}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":8502,"byte_end":8517,"line_start":68,"line_end":68,"column_start":19,"column_end":34},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":563},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":8622,"byte_end":8637,"line_start":74,"line_end":74,"column_start":29,"column_end":44},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":563},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":8749,"byte_end":8764,"line_start":80,"line_end":80,"column_start":22,"column_end":37},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":563},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":9012,"byte_end":9027,"line_start":89,"line_end":89,"column_start":30,"column_end":45},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":563},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":9141,"byte_end":9156,"line_start":95,"line_end":95,"column_start":23,"column_end":38},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":563},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":9883,"byte_end":9898,"line_start":114,"line_end":114,"column_start":23,"column_end":38},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":563},"to":{"krate":2,"index":9560}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":19912,"byte_end":19923,"line_start":434,"line_end":434,"column_start":6,"column_end":17},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":136},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header.rs","byte_start":23339,"byte_end":23352,"line_start":547,"line_end":547,"column_start":11,"column_end":24},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":428},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/header_cached.rs","byte_start":45287,"byte_end":45309,"line_start":31,"line_end":31,"column_start":6,"column_end":28},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":184},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/huffman_tree.rs","byte_start":50766,"byte_end":50774,"line_start":64,"line_end":64,"column_start":6,"column_end":14},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":197},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/huffman_tree.rs","byte_start":54247,"byte_end":54264,"line_start":176,"line_end":176,"column_start":6,"column_end":23},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":214},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/huffman_tree.rs","byte_start":60257,"byte_end":60274,"line_start":346,"line_end":346,"column_start":10,"column_end":27},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":231},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/audio.rs","byte_start":87671,"byte_end":87685,"line_start":48,"line_end":48,"column_start":19,"column_end":33},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":624},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/audio.rs","byte_start":87782,"byte_end":87796,"line_start":54,"line_end":54,"column_start":23,"column_end":37},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":624},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/audio.rs","byte_start":88231,"byte_end":88245,"line_start":69,"line_end":69,"column_start":23,"column_end":37},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":624},"to":{"krate":2,"index":9560}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/audio.rs","byte_start":88505,"byte_end":88517,"line_start":81,"line_end":81,"column_start":11,"column_end":23},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":346},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/audio.rs","byte_start":88703,"byte_end":88719,"line_start":95,"line_end":95,"column_start":19,"column_end":35},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":362},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/audio.rs","byte_start":88909,"byte_end":88925,"line_start":103,"line_end":103,"column_start":33,"column_end":49},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":362},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/audio.rs","byte_start":114032,"byte_end":114051,"line_start":859,"line_end":859,"column_start":6,"column_end":25},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":406},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/bitpacking.rs","byte_start":138166,"byte_end":138179,"line_start":361,"line_end":361,"column_start":11,"column_end":24},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":428},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/inside_ogg.rs","byte_start":147970,"byte_end":147985,"line_start":79,"line_end":79,"column_start":22,"column_end":37},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":494},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/samples.rs","byte_start":158726,"byte_end":158729,"line_start":20,"line_end":20,"column_start":29,"column_end":32},"kind":{"Impl":{"id":21}},"from":{"krate":5,"index":7080},"to":{"krate":0,"index":517}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/samples.rs","byte_start":159275,"byte_end":159293,"line_start":48,"line_end":48,"column_start":29,"column_end":47},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":527},"to":{"krate":0,"index":517}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/lib.rs","byte_start":2355,"byte_end":2366,"line_start":110,"line_end":110,"column_start":28,"column_end":39},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":663},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/lib.rs","byte_start":2742,"byte_end":2753,"line_start":125,"line_end":125,"column_start":28,"column_end":39},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":663},"to":{"krate":2,"index":9560}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/lib.rs","byte_start":2936,"byte_end":2947,"line_start":131,"line_end":131,"column_start":38,"column_end":49},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":663},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/lib.rs","byte_start":3078,"byte_end":3089,"line_start":137,"line_end":137,"column_start":40,"column_end":51},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":663},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/lewton-0.9.4/src/lib.rs","byte_start":3236,"byte_end":3247,"line_start":144,"line_end":144,"column_start":29,"column_end":40},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":663},"to":{"krate":2,"index":2925}}]}