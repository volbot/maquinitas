{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2","program":"/usr/bin/rls","arguments":["--crate-name","fontdue","--edition=2018","/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/lib.rs","--json=diagnostic-rendered-ansi,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=129b57b263282fcb","-C","extra-filename=-129b57b263282fcb","--out-dir","/home/louie/Programs/maquinitas/target/rls/debug/deps","-L","dependency=/home/louie/Programs/maquinitas/target/rls/debug/deps","--extern","hashbrown=/home/louie/Programs/maquinitas/target/rls/debug/deps/libhashbrown-f822a1665cd14a42.rmeta","--extern","ttf_parser=/home/louie/Programs/maquinitas/target/rls/debug/deps/libttf_parser-9fabd9004aadc8db.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/usr"],"output":"/home/louie/Programs/maquinitas/target/rls/debug/deps/libfontdue-129b57b263282fcb.rmeta"},"prelude":{"crate_id":{"name":"fontdue","disambiguator":[2100420182173695039,0]},"crate_root":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src","external_crates":[{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[8607811298988957190,0]}},{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[9950803289178341956,0]}},{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[13474909584011716809,0]}},{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[14989130687617550202,0]}},{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","num":5,"id":{"name":"hashbrown","disambiguator":[9251596632654422,0]}},{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","num":6,"id":{"name":"ahash","disambiguator":[11838970271456229084,0]}},{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","num":7,"id":{"name":"ttf_parser","disambiguator":[12240683347438059462,0]}}],"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/lib.rs","byte_start":0,"byte_end":472,"line_start":1,"line_end":23,"column_start":1,"column_end":50}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":787},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":21245,"byte_end":21258,"line_start":1,"line_end":1,"column_start":25,"column_end":38},"alias_span":null,"name":"CharacterData","value":"","parent":{"krate":0,"index":107}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/lib.rs","byte_start":380,"byte_end":381,"line_start":20,"line_end":20,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"Metrics, OutlineBounds, Glyph, Font","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/lib.rs","byte_start":0,"byte_end":472,"line_start":1,"line_end":23,"column_start":1,"column_end":50},"name":"","qualname":"::","value":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":107},{"krate":0,"index":207},{"krate":0,"index":285},{"krate":0,"index":413},{"krate":0,"index":451},{"krate":0,"index":487},{"krate":0,"index":488}],"decl_id":null,"docs":" Fontdue is a font parser, rasterizer, and layout tool.","sig":null,"attributes":[{"value":"/ Fontdue is a font parser, rasterizer, and layout tool.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/lib.rs","byte_start":0,"byte_end":58,"line_start":1,"line_end":1,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/lib.rs","byte_start":59,"byte_end":62,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This is a #![no_std] crate, but still requires the alloc crate.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/lib.rs","byte_start":63,"byte_end":130,"line_start":3,"line_end":3,"column_start":1,"column_end":68}},{"value":"no_std","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/lib.rs","byte_start":132,"byte_end":142,"line_start":5,"line_end":5,"column_start":1,"column_end":11}},{"value":"allow(dead_code)","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/lib.rs","byte_start":143,"byte_end":163,"line_start":6,"line_end":6,"column_start":1,"column_end":21}},{"value":"allow(clippy :: style)","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/lib.rs","byte_start":164,"byte_end":188,"line_start":7,"line_end":7,"column_start":1,"column_end":25}},{"value":"allow(clippy :: complexity)","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/lib.rs","byte_start":189,"byte_end":218,"line_start":8,"line_end":8,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":490},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":1042,"byte_end":1055,"line_start":19,"line_end":19,"column_start":12,"column_end":25},"name":"OutlineBounds","qualname":"::font::OutlineBounds","value":"OutlineBounds { xmin, ymin, width, height }","parent":null,"children":[{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":494}],"decl_id":null,"docs":" Defines the bounds for a glyph's outline in subpixels. A glyph's outline is always contained in\n its bitmap.\n","sig":null,"attributes":[{"value":"/ Defines the bounds for a glyph's outline in subpixels. A glyph's outline is always contained in","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":874,"byte_end":973,"line_start":16,"line_end":16,"column_start":1,"column_end":100}},{"value":"/ its bitmap.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":974,"byte_end":989,"line_start":17,"line_end":17,"column_start":1,"column_end":16}}]},{"kind":"Field","id":{"krate":0,"index":491},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":1136,"byte_end":1140,"line_start":21,"line_end":21,"column_start":9,"column_end":13},"name":"xmin","qualname":"::font::OutlineBounds::xmin","value":"f32","parent":{"krate":0,"index":490},"children":[],"decl_id":null,"docs":" Subpixel offset of the left-most edge of the glyph's outline.\n","sig":null,"attributes":[{"value":"/ Subpixel offset of the left-most edge of the glyph's outline.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":1062,"byte_end":1127,"line_start":20,"line_end":20,"column_start":5,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":492},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":1227,"byte_end":1231,"line_start":23,"line_end":23,"column_start":9,"column_end":13},"name":"ymin","qualname":"::font::OutlineBounds::ymin","value":"f32","parent":{"krate":0,"index":490},"children":[],"decl_id":null,"docs":" Subpixel offset of the bottom-most edge of the glyph's outline.\n","sig":null,"attributes":[{"value":"/ Subpixel offset of the bottom-most edge of the glyph's outline.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":1151,"byte_end":1218,"line_start":22,"line_end":22,"column_start":5,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":493},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":1293,"byte_end":1298,"line_start":25,"line_end":25,"column_start":9,"column_end":14},"name":"width","qualname":"::font::OutlineBounds::width","value":"f32","parent":{"krate":0,"index":490},"children":[],"decl_id":null,"docs":" The width of the outline in subpixels.\n","sig":null,"attributes":[{"value":"/ The width of the outline in subpixels.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":1242,"byte_end":1284,"line_start":24,"line_end":24,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":494},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":1361,"byte_end":1367,"line_start":27,"line_end":27,"column_start":9,"column_end":15},"name":"height","qualname":"::font::OutlineBounds::height","value":"f32","parent":{"krate":0,"index":490},"children":[],"decl_id":null,"docs":" The height of the outline in subpixels.\n","sig":null,"attributes":[{"value":"/ The height of the outline in subpixels.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":1309,"byte_end":1352,"line_start":26,"line_end":26,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":1673,"byte_end":1678,"line_start":44,"line_end":44,"column_start":12,"column_end":17},"name":"scale","qualname":"<OutlineBounds>::scale","value":"pub fn scale(&Self, f32) -> OutlineBounds","parent":null,"children":[],"decl_id":null,"docs":" Scales the bounding box by the given factor.\n","sig":null,"attributes":[{"value":"/ Scales the bounding box by the given factor.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":1591,"byte_end":1639,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"inline(always)","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":1644,"byte_end":1661,"line_start":43,"line_end":43,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":504},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":2049,"byte_end":2056,"line_start":56,"line_end":56,"column_start":12,"column_end":19},"name":"Metrics","qualname":"::font::Metrics","value":"Metrics { xmin, ymin, width, height, advance_width, advance_height, bounds }","parent":null,"children":[{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":508},{"krate":0,"index":509},{"krate":0,"index":510},{"krate":0,"index":511}],"decl_id":null,"docs":" Encapsulates all layout information associated with a glyph for a fixed scale.\n","sig":null,"attributes":[{"value":"/ Encapsulates all layout information associated with a glyph for a fixed scale.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":1914,"byte_end":1996,"line_start":54,"line_end":54,"column_start":1,"column_end":83}}]},{"kind":"Field","id":{"krate":0,"index":505},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":2222,"byte_end":2226,"line_start":59,"line_end":59,"column_start":9,"column_end":13},"name":"xmin","qualname":"::font::Metrics::xmin","value":"i32","parent":{"krate":0,"index":504},"children":[],"decl_id":null,"docs":" Whole pixel offset of the left-most edge of the bitmap. This may be negative to reflect the\n glyph is positioned to the left of the origin.\n","sig":null,"attributes":[{"value":"/ Whole pixel offset of the left-most edge of the bitmap. This may be negative to reflect the","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":2063,"byte_end":2158,"line_start":57,"line_end":57,"column_start":5,"column_end":100}},{"value":"/ glyph is positioned to the left of the origin.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":2163,"byte_end":2213,"line_start":58,"line_end":58,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":506},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":2391,"byte_end":2395,"line_start":62,"line_end":62,"column_start":9,"column_end":13},"name":"ymin","qualname":"::font::Metrics::ymin","value":"i32","parent":{"krate":0,"index":504},"children":[],"decl_id":null,"docs":" Whole pixel offset of the bottom-most edge of the bitmap. This may be negative to refelct\n the glyph is positioned below the baseline.\n","sig":null,"attributes":[{"value":"/ Whole pixel offset of the bottom-most edge of the bitmap. This may be negative to refelct","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":2237,"byte_end":2330,"line_start":60,"line_end":60,"column_start":5,"column_end":98}},{"value":"/ the glyph is positioned below the baseline.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":2335,"byte_end":2382,"line_start":61,"line_end":61,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":507},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":2459,"byte_end":2464,"line_start":64,"line_end":64,"column_start":9,"column_end":14},"name":"width","qualname":"::font::Metrics::width","value":"usize","parent":{"krate":0,"index":504},"children":[],"decl_id":null,"docs":" The width of the bitmap in whole pixels.\n","sig":null,"attributes":[{"value":"/ The width of the bitmap in whole pixels.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":2406,"byte_end":2450,"line_start":63,"line_end":63,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":508},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":2531,"byte_end":2537,"line_start":66,"line_end":66,"column_start":9,"column_end":15},"name":"height","qualname":"::font::Metrics::height","value":"usize","parent":{"krate":0,"index":504},"children":[],"decl_id":null,"docs":" The height of the bitmap in whole pixels.\n","sig":null,"attributes":[{"value":"/ The height of the bitmap in whole pixels.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":2477,"byte_end":2522,"line_start":65,"line_end":65,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":509},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":2629,"byte_end":2642,"line_start":68,"line_end":68,"column_start":9,"column_end":22},"name":"advance_width","qualname":"::font::Metrics::advance_width","value":"f32","parent":{"krate":0,"index":504},"children":[],"decl_id":null,"docs":" Advance width of the glyph in subpixels. Used in horizontal fonts.\n","sig":null,"attributes":[{"value":"/ Advance width of the glyph in subpixels. Used in horizontal fonts.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":2550,"byte_end":2620,"line_start":67,"line_end":67,"column_start":5,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":510},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":2731,"byte_end":2745,"line_start":70,"line_end":70,"column_start":9,"column_end":23},"name":"advance_height","qualname":"::font::Metrics::advance_height","value":"f32","parent":{"krate":0,"index":504},"children":[],"decl_id":null,"docs":" Advance height of the glyph in subpixels. Used in vertical fonts.\n","sig":null,"attributes":[{"value":"/ Advance height of the glyph in subpixels. Used in vertical fonts.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":2653,"byte_end":2722,"line_start":69,"line_end":69,"column_start":5,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":511},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":2918,"byte_end":2924,"line_start":73,"line_end":73,"column_start":9,"column_end":15},"name":"bounds","qualname":"::font::Metrics::bounds","value":"font::OutlineBounds","parent":{"krate":0,"index":504},"children":[],"decl_id":null,"docs":" The bounding box that contains the glyph's outline at the offsets specified by the font.\n This is always a smaller box than the bitmap bounds.\n","sig":null,"attributes":[{"value":"/ The bounding box that contains the glyph's outline at the offsets specified by the font.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":2756,"byte_end":2848,"line_start":71,"line_end":71,"column_start":5,"column_end":97}},{"value":"/ This is always a smaller box than the bitmap bounds.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":2853,"byte_end":2909,"line_start":72,"line_end":72,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":521},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":3331,"byte_end":3342,"line_start":92,"line_end":92,"column_start":12,"column_end":23},"name":"LineMetrics","qualname":"::font::LineMetrics","value":"LineMetrics { ascent, descent, line_gap, new_line_size }","parent":null,"children":[{"krate":0,"index":522},{"krate":0,"index":523},{"krate":0,"index":524},{"krate":0,"index":525}],"decl_id":null,"docs":" Metrics associated with line positioning.\n","sig":null,"attributes":[{"value":"/ Metrics associated with line positioning.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":3233,"byte_end":3278,"line_start":90,"line_end":90,"column_start":1,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":522},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":3465,"byte_end":3471,"line_start":95,"line_end":95,"column_start":9,"column_end":15},"name":"ascent","qualname":"::font::LineMetrics::ascent","value":"f32","parent":{"krate":0,"index":521},"children":[],"decl_id":null,"docs":" The highest point that any glyph in the font extends to above the baseline. Typically\n positive.\n","sig":null,"attributes":[{"value":"/ The highest point that any glyph in the font extends to above the baseline. Typically","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":3349,"byte_end":3438,"line_start":93,"line_end":93,"column_start":5,"column_end":94}},{"value":"/ positive.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":3443,"byte_end":3456,"line_start":94,"line_end":94,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":523},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":3597,"byte_end":3604,"line_start":98,"line_end":98,"column_start":9,"column_end":16},"name":"descent","qualname":"::font::LineMetrics::descent","value":"f32","parent":{"krate":0,"index":521},"children":[],"decl_id":null,"docs":" The lowest point that any glyph in the font extends to below the baseline. Typically\n negative.\n","sig":null,"attributes":[{"value":"/ The lowest point that any glyph in the font extends to below the baseline. Typically","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":3482,"byte_end":3570,"line_start":96,"line_end":96,"column_start":5,"column_end":93}},{"value":"/ negative.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":3575,"byte_end":3588,"line_start":97,"line_end":97,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":524},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":3778,"byte_end":3786,"line_start":101,"line_end":101,"column_start":9,"column_end":17},"name":"line_gap","qualname":"::font::LineMetrics::line_gap","value":"f32","parent":{"krate":0,"index":521},"children":[],"decl_id":null,"docs":" The gap to leave between the descent of one line and the ascent of the next. This is of\n course only a guideline given by the font's designers.\n","sig":null,"attributes":[{"value":"/ The gap to leave between the descent of one line and the ascent of the next. This is of","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":3615,"byte_end":3706,"line_start":99,"line_end":99,"column_start":5,"column_end":96}},{"value":"/ course only a guideline given by the font's designers.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":3711,"byte_end":3769,"line_start":100,"line_end":100,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":525},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":3989,"byte_end":4002,"line_start":104,"line_end":104,"column_start":9,"column_end":22},"name":"new_line_size","qualname":"::font::LineMetrics::new_line_size","value":"f32","parent":{"krate":0,"index":521},"children":[],"decl_id":null,"docs":" A precalculated value for the height or width of the line depending on if the font is laid\n out horizontally or vertically. It's calculated by: ascent - descent + line_gap.\n","sig":null,"attributes":[{"value":"/ A precalculated value for the height or width of the line depending on if the font is laid","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":3797,"byte_end":3891,"line_start":102,"line_end":102,"column_start":5,"column_end":99}},{"value":"/ out horizontally or vertically. It's calculated by: ascent - descent + line_gap.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":3896,"byte_end":3980,"line_start":103,"line_end":103,"column_start":5,"column_end":89}}]},{"kind":"Struct","id":{"krate":0,"index":543},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":5477,"byte_end":5489,"line_start":155,"line_end":155,"column_start":12,"column_end":24},"name":"FontSettings","qualname":"::font::FontSettings","value":"FontSettings { collection_index, scale }","parent":null,"children":[{"krate":0,"index":544},{"krate":0,"index":545}],"decl_id":null,"docs":" Settings for controlling specific font and layout behavior.\n","sig":null,"attributes":[{"value":"/ Settings for controlling specific font and layout behavior.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":5361,"byte_end":5424,"line_start":153,"line_end":153,"column_start":1,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":544},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":5585,"byte_end":5601,"line_start":157,"line_end":157,"column_start":9,"column_end":25},"name":"collection_index","qualname":"::font::FontSettings::collection_index","value":"u32","parent":{"krate":0,"index":543},"children":[],"decl_id":null,"docs":" The default is 0. The index of the font to use if parsing a font collection.\n","sig":null,"attributes":[{"value":"/ The default is 0. The index of the font to use if parsing a font collection.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":5496,"byte_end":5576,"line_start":156,"line_end":156,"column_start":5,"column_end":85}}]},{"kind":"Field","id":{"krate":0,"index":545},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":5992,"byte_end":5997,"line_start":162,"line_end":162,"column_start":9,"column_end":14},"name":"scale","qualname":"::font::FontSettings::scale","value":"f32","parent":{"krate":0,"index":543},"children":[],"decl_id":null,"docs":" The default is 40. The scale in px the font geometry is optimized for. Fonts rendered at\n the scale defined here will be the most optimal in terms of looks and performance. Glyphs\n rendered smaller than this scale will look the same but perform slightly worse, while\n glyphs rendered larger than this will looks worse but perform slightly better.\n","sig":null,"attributes":[{"value":"/ The default is 40. The scale in px the font geometry is optimized for. Fonts rendered at","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":5612,"byte_end":5704,"line_start":158,"line_end":158,"column_start":5,"column_end":97}},{"value":"/ the scale defined here will be the most optimal in terms of looks and performance. Glyphs","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":5709,"byte_end":5802,"line_start":159,"line_end":159,"column_start":5,"column_end":98}},{"value":"/ rendered smaller than this scale will look the same but perform slightly worse, while","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":5807,"byte_end":5896,"line_start":160,"line_end":160,"column_start":5,"column_end":94}},{"value":"/ glyphs rendered larger than this will looks worse but perform slightly better.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":5901,"byte_end":5983,"line_start":161,"line_end":161,"column_start":5,"column_end":87}}]},{"kind":"Struct","id":{"krate":0,"index":555},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":6300,"byte_end":6304,"line_start":176,"line_end":176,"column_start":12,"column_end":16},"name":"Font","qualname":"::font::Font","value":"Font {  }","parent":null,"children":[{"krate":0,"index":556},{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":559},{"krate":0,"index":560},{"krate":0,"index":561},{"krate":0,"index":562}],"decl_id":null,"docs":" Represents a font. Fonts are immutable after creation and owns its own copy of the font data.\n","sig":null,"attributes":[{"value":"/ Represents a font. Fonts are immutable after creation and owns its own copy of the font data.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":6174,"byte_end":6271,"line_start":174,"line_end":174,"column_start":1,"column_end":98}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":7806,"byte_end":7816,"line_start":220,"line_end":220,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<Font>::from_bytes","value":"pub fn from_bytes<Data: Deref<Target = [u8]>>(Data, FontSettings)\n-> FontResult<Font>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a font from an array of bytes.\n","sig":null,"attributes":[{"value":"/ Constructs a font from an array of bytes.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":7749,"byte_end":7794,"line_start":219,"line_end":219,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":10994,"byte_end":11017,"line_start":296,"line_end":296,"column_start":12,"column_end":35},"name":"horizontal_line_metrics","qualname":"<Font>::horizontal_line_metrics","value":"pub fn horizontal_line_metrics(&Self, f32) -> Option<LineMetrics>","parent":null,"children":[],"decl_id":null,"docs":" New line metrics for fonts that append characters to lines horizontally, and append new\n lines vertically (above or below the current line). Only populated for fonts with the\n appropriate metrics, none if it's missing.\n","sig":null,"attributes":[{"value":"/ New line metrics for fonts that append characters to lines horizontally, and append new","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":10746,"byte_end":10837,"line_start":293,"line_end":293,"column_start":5,"column_end":96}},{"value":"/ lines vertically (above or below the current line). Only populated for fonts with the","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":10842,"byte_end":10931,"line_start":294,"line_end":294,"column_start":5,"column_end":94}},{"value":"/ appropriate metrics, none if it's missing.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":10936,"byte_end":10982,"line_start":295,"line_end":295,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":11481,"byte_end":11502,"line_start":307,"line_end":307,"column_start":12,"column_end":33},"name":"vertical_line_metrics","qualname":"<Font>::vertical_line_metrics","value":"pub fn vertical_line_metrics(&Self, f32) -> Option<LineMetrics>","parent":null,"children":[],"decl_id":null,"docs":" New line metrics for fonts that append characters to lines vertically, and append new\n lines horizontally (left or right of the current line). Only populated for fonts with the\n appropriate metrics, none if it's missing.\n","sig":null,"attributes":[{"value":"/ New line metrics for fonts that append characters to lines vertically, and append new","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":11231,"byte_end":11320,"line_start":304,"line_end":304,"column_start":5,"column_end":94}},{"value":"/ lines horizontally (left or right of the current line). Only populated for fonts with the","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":11325,"byte_end":11418,"line_start":305,"line_end":305,"column_start":5,"column_end":98}},{"value":"/ appropriate metrics, none if it's missing.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":11423,"byte_end":11469,"line_start":306,"line_end":306,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":11781,"byte_end":11793,"line_start":317,"line_end":317,"column_start":12,"column_end":24},"name":"units_per_em","qualname":"<Font>::units_per_em","value":"pub fn units_per_em(&Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Gets the font's units per em.\n","sig":null,"attributes":[{"value":"/ Gets the font's units per em.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":11714,"byte_end":11747,"line_start":315,"line_end":315,"column_start":5,"column_end":38}},{"value":"inline(always)","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":11752,"byte_end":11769,"line_start":316,"line_end":316,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":11949,"byte_end":11961,"line_start":323,"line_end":323,"column_start":12,"column_end":24},"name":"scale_factor","qualname":"<Font>::scale_factor","value":"pub fn scale_factor(&Self, f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Calculates the glyph's outline scale factor for a given px size.\n","sig":null,"attributes":[{"value":"/ Calculates the glyph's outline scale factor for a given px size.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":11847,"byte_end":11915,"line_start":321,"line_end":321,"column_start":5,"column_end":73}},{"value":"inline(always)","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":11920,"byte_end":11937,"line_start":322,"line_end":322,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":12541,"byte_end":12548,"line_start":337,"line_end":337,"column_start":12,"column_end":19},"name":"metrics","qualname":"<Font>::metrics","value":"pub fn metrics(&Self, char, f32) -> Metrics","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the layout metrics for the given character. If the character isn't present in the\n font, then the layout for the font's default character is returned instead.\n # Arguments","sig":null,"attributes":[{"value":"/ Retrieves the layout metrics for the given character. If the character isn't present in the","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":12029,"byte_end":12124,"line_start":327,"line_end":327,"column_start":5,"column_end":100}},{"value":"/ font, then the layout for the font's default character is returned instead.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":12129,"byte_end":12208,"line_start":328,"line_end":328,"column_start":5,"column_end":84}},{"value":"/ # Arguments","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":12213,"byte_end":12228,"line_start":329,"line_end":329,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":12233,"byte_end":12236,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ * `index` - The character in the font to to generate the layout metrics for.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":12241,"byte_end":12321,"line_start":331,"line_end":331,"column_start":5,"column_end":85}},{"value":"/ * `px` - The size to generate the layout metrics for the character at. Cannot be negative.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":12326,"byte_end":12420,"line_start":332,"line_end":332,"column_start":5,"column_end":99}},{"value":"/ # Returns","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":12425,"byte_end":12438,"line_start":333,"line_end":333,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":12443,"byte_end":12446,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ * `Metrics` - Sizing and positioning metadata for the glyph.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":12451,"byte_end":12515,"line_start":335,"line_end":335,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":12520,"byte_end":12529,"line_start":336,"line_end":336,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":13146,"byte_end":13161,"line_start":350,"line_end":350,"column_start":12,"column_end":27},"name":"metrics_indexed","qualname":"<Font>::metrics_indexed","value":"pub fn metrics_indexed(&Self, usize, f32) -> Metrics","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the layout metrics at the given index. You normally want to be using\n metrics(char, f32) instead, unless your glyphs are pre-indexed.\n # Arguments","sig":null,"attributes":[{"value":"/ Retrieves the layout metrics at the given index. You normally want to be using","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":12675,"byte_end":12757,"line_start":341,"line_end":341,"column_start":5,"column_end":87}},{"value":"/ metrics(char, f32) instead, unless your glyphs are pre-indexed.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":12762,"byte_end":12829,"line_start":342,"line_end":342,"column_start":5,"column_end":72}},{"value":"/ # Arguments","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":12834,"byte_end":12849,"line_start":343,"line_end":343,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":12854,"byte_end":12857,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ * `index` - The glyph index in the font to to generate the layout metrics for.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":12862,"byte_end":12944,"line_start":345,"line_end":345,"column_start":5,"column_end":87}},{"value":"/ * `px` - The size to generate the layout metrics for the glyph at. Cannot be negative.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":12949,"byte_end":13039,"line_start":346,"line_end":346,"column_start":5,"column_end":95}},{"value":"/ # Returns","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":13044,"byte_end":13057,"line_start":347,"line_end":347,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":13062,"byte_end":13065,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ * `Metrics` - Sizing and positioning metadata for the glyph.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":13070,"byte_end":13134,"line_start":349,"line_end":349,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":15046,"byte_end":15062,"line_start":393,"line_end":393,"column_start":12,"column_end":28},"name":"rasterize_config","qualname":"<Font>::rasterize_config","value":"pub fn rasterize_config(&Self, GlyphRasterConfig) -> (Metrics, Vec<u8>)","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the layout rasterized bitmap for the given raster config. If the raster config's\n character isn't present in the font, then the layout and bitmap for the font's default\n character's raster is returned instead.\n # Arguments","sig":null,"attributes":[{"value":"/ Retrieves the layout rasterized bitmap for the given raster config. If the raster config's","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":14347,"byte_end":14441,"line_start":380,"line_end":380,"column_start":5,"column_end":99}},{"value":"/ character isn't present in the font, then the layout and bitmap for the font's default","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":14446,"byte_end":14536,"line_start":381,"line_end":381,"column_start":5,"column_end":95}},{"value":"/ character's raster is returned instead.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":14541,"byte_end":14584,"line_start":382,"line_end":382,"column_start":5,"column_end":48}},{"value":"/ # Arguments","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":14589,"byte_end":14604,"line_start":383,"line_end":383,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":14609,"byte_end":14612,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ * `config` - The settings to render the character at.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":14617,"byte_end":14674,"line_start":385,"line_end":385,"column_start":5,"column_end":62}},{"value":"/ # Returns","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":14679,"byte_end":14692,"line_start":386,"line_end":386,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":14697,"byte_end":14700,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ * `Metrics` - Sizing and positioning metadata for the rasterized glyph.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":14705,"byte_end":14780,"line_start":388,"line_end":388,"column_start":5,"column_end":80}},{"value":"/ * `Vec<u8>` - Coverage vector for the glyph. Coverage is a linear scale where 0 represents","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":14785,"byte_end":14879,"line_start":389,"line_end":389,"column_start":5,"column_end":99}},{"value":"/ 0% coverage of that pixel by the glyph and 255 represents 100% coverage. The vec starts at","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":14884,"byte_end":14978,"line_start":390,"line_end":390,"column_start":5,"column_end":99}},{"value":"/ the top left corner of the glyph.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":14983,"byte_end":15020,"line_start":391,"line_end":391,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":15025,"byte_end":15034,"line_start":392,"line_end":392,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":15949,"byte_end":15958,"line_start":411,"line_end":411,"column_start":12,"column_end":21},"name":"rasterize","qualname":"<Font>::rasterize","value":"pub fn rasterize(&Self, char, f32) -> (Metrics, Vec<u8>)","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the layout metrics and rasterized bitmap for the given character. If the\n character isn't present in the font, then the layout and bitmap for the font's default\n character is returned instead.\n # Arguments","sig":null,"attributes":[{"value":"/ Retrieves the layout metrics and rasterized bitmap for the given character. If the","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":15203,"byte_end":15289,"line_start":397,"line_end":397,"column_start":5,"column_end":91}},{"value":"/ character isn't present in the font, then the layout and bitmap for the font's default","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":15294,"byte_end":15384,"line_start":398,"line_end":398,"column_start":5,"column_end":95}},{"value":"/ character is returned instead.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":15389,"byte_end":15423,"line_start":399,"line_end":399,"column_start":5,"column_end":39}},{"value":"/ # Arguments","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":15428,"byte_end":15443,"line_start":400,"line_end":400,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":15448,"byte_end":15451,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ * `character` - The character to rasterize.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":15456,"byte_end":15503,"line_start":402,"line_end":402,"column_start":5,"column_end":52}},{"value":"/ * `px` - The size to render the character at. Cannot be negative.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":15508,"byte_end":15577,"line_start":403,"line_end":403,"column_start":5,"column_end":74}},{"value":"/ # Returns","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":15582,"byte_end":15595,"line_start":404,"line_end":404,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":15600,"byte_end":15603,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ * `Metrics` - Sizing and positioning metadata for the rasterized glyph.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":15608,"byte_end":15683,"line_start":406,"line_end":406,"column_start":5,"column_end":80}},{"value":"/ * `Vec<u8>` - Coverage vector for the glyph. Coverage is a linear scale where 0 represents","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":15688,"byte_end":15782,"line_start":407,"line_end":407,"column_start":5,"column_end":99}},{"value":"/ 0% coverage of that pixel by the glyph and 255 represents 100% coverage. The vec starts at","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":15787,"byte_end":15881,"line_start":408,"line_end":408,"column_start":5,"column_end":99}},{"value":"/ the top left corner of the glyph.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":15886,"byte_end":15923,"line_start":409,"line_end":409,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":15928,"byte_end":15937,"line_start":410,"line_end":410,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":16991,"byte_end":17016,"line_start":431,"line_end":431,"column_start":12,"column_end":37},"name":"rasterize_config_subpixel","qualname":"<Font>::rasterize_config_subpixel","value":"pub fn rasterize_config_subpixel(&Self, GlyphRasterConfig)\n-> (Metrics, Vec<u8>)","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the layout rasterized bitmap for the given raster config. If the raster config's\n character isn't present in the font, then the layout and bitmap for the font's default\n character's raster is returned instead.","sig":null,"attributes":[{"value":"/ Retrieves the layout rasterized bitmap for the given raster config. If the raster config's","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":16098,"byte_end":16192,"line_start":415,"line_end":415,"column_start":5,"column_end":99}},{"value":"/ character isn't present in the font, then the layout and bitmap for the font's default","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":16197,"byte_end":16287,"line_start":416,"line_end":416,"column_start":5,"column_end":95}},{"value":"/ character's raster is returned instead.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":16292,"byte_end":16335,"line_start":417,"line_end":417,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":16340,"byte_end":16343,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ This will perform the operation with the width multiplied by 3, as to simulate subpixels.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":16348,"byte_end":16441,"line_start":419,"line_end":419,"column_start":5,"column_end":98}},{"value":"/ Taking these as RGB values will perform subpixel anti aliasing.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":16446,"byte_end":16513,"line_start":420,"line_end":420,"column_start":5,"column_end":72}},{"value":"/ # Arguments","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":16518,"byte_end":16533,"line_start":421,"line_end":421,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":16538,"byte_end":16541,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ * `config` - The settings to render the character at.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":16546,"byte_end":16603,"line_start":423,"line_end":423,"column_start":5,"column_end":62}},{"value":"/ # Returns","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":16608,"byte_end":16621,"line_start":424,"line_end":424,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":16626,"byte_end":16629,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ * `Metrics` - Sizing and positioning metadata for the rasterized glyph.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":16634,"byte_end":16709,"line_start":426,"line_end":426,"column_start":5,"column_end":80}},{"value":"/ * `Vec<u8>` - Swizzled RGB coverage vector for the glyph. Coverage is a linear scale where 0","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":16714,"byte_end":16810,"line_start":427,"line_end":427,"column_start":5,"column_end":101}},{"value":"/ represents 0% coverage of that subpixel by the glyph and 255 represents 100% coverage. The","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":16815,"byte_end":16909,"line_start":428,"line_end":428,"column_start":5,"column_end":99}},{"value":"/ vec starts at the top left corner of the glyph.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":16914,"byte_end":16965,"line_start":429,"line_end":429,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":16970,"byte_end":16979,"line_start":430,"line_end":430,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":18106,"byte_end":18124,"line_start":452,"line_end":452,"column_start":12,"column_end":30},"name":"rasterize_subpixel","qualname":"<Font>::rasterize_subpixel","value":"pub fn rasterize_subpixel(&Self, char, f32) -> (Metrics, Vec<u8>)","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the layout metrics and rasterized bitmap for the given character. If the\n character isn't present in the font, then the layout and bitmap for the font's default\n character is returned instead.","sig":null,"attributes":[{"value":"/ Retrieves the layout metrics and rasterized bitmap for the given character. If the","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":17166,"byte_end":17252,"line_start":435,"line_end":435,"column_start":5,"column_end":91}},{"value":"/ character isn't present in the font, then the layout and bitmap for the font's default","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":17257,"byte_end":17347,"line_start":436,"line_end":436,"column_start":5,"column_end":95}},{"value":"/ character is returned instead.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":17352,"byte_end":17386,"line_start":437,"line_end":437,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":17391,"byte_end":17394,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ This will perform the operation with the width multiplied by 3, as to simulate subpixels.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":17399,"byte_end":17492,"line_start":439,"line_end":439,"column_start":5,"column_end":98}},{"value":"/ Taking these as RGB values will perform subpixel anti aliasing.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":17497,"byte_end":17564,"line_start":440,"line_end":440,"column_start":5,"column_end":72}},{"value":"/ # Arguments","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":17569,"byte_end":17584,"line_start":441,"line_end":441,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":17589,"byte_end":17592,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ * `character` - The character to rasterize.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":17597,"byte_end":17644,"line_start":443,"line_end":443,"column_start":5,"column_end":52}},{"value":"/ * `px` - The size to render the character at. Cannot be negative.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":17649,"byte_end":17718,"line_start":444,"line_end":444,"column_start":5,"column_end":74}},{"value":"/ # Returns","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":17723,"byte_end":17736,"line_start":445,"line_end":445,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":17741,"byte_end":17744,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ * `Metrics` - Sizing and positioning metadata for the rasterized glyph.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":17749,"byte_end":17824,"line_start":447,"line_end":447,"column_start":5,"column_end":80}},{"value":"/ * `Vec<u8>` - Swizzled RGB coverage vector for the glyph. Coverage is a linear scale where 0","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":17829,"byte_end":17925,"line_start":448,"line_end":448,"column_start":5,"column_end":101}},{"value":"/ represents 0% coverage of that subpixel by the glyph and 255 represents 100% coverage. The","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":17930,"byte_end":18024,"line_start":449,"line_end":449,"column_start":5,"column_end":99}},{"value":"/ vec starts at the top left corner of the glyph.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":18029,"byte_end":18080,"line_start":450,"line_end":450,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":18085,"byte_end":18094,"line_start":451,"line_end":451,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":18973,"byte_end":18990,"line_start":468,"line_end":468,"column_start":12,"column_end":29},"name":"rasterize_indexed","qualname":"<Font>::rasterize_indexed","value":"pub fn rasterize_indexed(&Self, usize, f32) -> (Metrics, Vec<u8>)","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the layout metrics and rasterized bitmap at the given index. You normally want to\n be using rasterize(char, f32) instead, unless your glyphs are pre-indexed.\n # Arguments","sig":null,"attributes":[{"value":"/ Retrieves the layout metrics and rasterized bitmap at the given index. You normally want to","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":18273,"byte_end":18368,"line_start":456,"line_end":456,"column_start":5,"column_end":100}},{"value":"/ be using rasterize(char, f32) instead, unless your glyphs are pre-indexed.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":18373,"byte_end":18451,"line_start":457,"line_end":457,"column_start":5,"column_end":83}},{"value":"/ # Arguments","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":18456,"byte_end":18471,"line_start":458,"line_end":458,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":18476,"byte_end":18479,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ * `index` - The glyph index in the font to rasterize.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":18484,"byte_end":18541,"line_start":460,"line_end":460,"column_start":5,"column_end":62}},{"value":"/ * `px` - The size to render the character at. Cannot be negative.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":18546,"byte_end":18615,"line_start":461,"line_end":461,"column_start":5,"column_end":74}},{"value":"/ # Returns","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":18620,"byte_end":18633,"line_start":462,"line_end":462,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":18638,"byte_end":18641,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ * `Metrics` - Sizing and positioning metadata for the rasterized glyph.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":18646,"byte_end":18721,"line_start":464,"line_end":464,"column_start":5,"column_end":80}},{"value":"/ * `Vec<u8>` - Coverage vector for the glyph. Coverage is a linear scale where 0 represents","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":18726,"byte_end":18820,"line_start":465,"line_end":465,"column_start":5,"column_end":99}},{"value":"/ 0% coverage of that pixel by the glyph and 255 represents 100% coverage. The vec starts at","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":18825,"byte_end":18919,"line_start":466,"line_end":466,"column_start":5,"column_end":99}},{"value":"/ the top left corner of the glyph.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":18924,"byte_end":18961,"line_start":467,"line_end":467,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":20286,"byte_end":20312,"line_start":492,"line_end":492,"column_start":12,"column_end":38},"name":"rasterize_indexed_subpixel","qualname":"<Font>::rasterize_indexed_subpixel","value":"pub fn rasterize_indexed_subpixel(&Self, usize, f32) -> (Metrics, Vec<u8>)","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the layout metrics and rasterized bitmap at the given index. You normally want to\n be using rasterize(char, f32) instead, unless your glyphs are pre-indexed.","sig":null,"attributes":[{"value":"/ Retrieves the layout metrics and rasterized bitmap at the given index. You normally want to","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":19392,"byte_end":19487,"line_start":477,"line_end":477,"column_start":5,"column_end":100}},{"value":"/ be using rasterize(char, f32) instead, unless your glyphs are pre-indexed.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":19492,"byte_end":19570,"line_start":478,"line_end":478,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":19575,"byte_end":19578,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ This will perform the operation with the width multiplied by 3, as to simulate subpixels.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":19583,"byte_end":19676,"line_start":480,"line_end":480,"column_start":5,"column_end":98}},{"value":"/ Taking these as RGB values will perform subpixel anti aliasing.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":19681,"byte_end":19748,"line_start":481,"line_end":481,"column_start":5,"column_end":72}},{"value":"/ # Arguments","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":19753,"byte_end":19768,"line_start":482,"line_end":482,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":19773,"byte_end":19776,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ * `index` - The glyph index in the font to rasterize.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":19781,"byte_end":19838,"line_start":484,"line_end":484,"column_start":5,"column_end":62}},{"value":"/ * `px` - The size to render the character at. Cannot be negative.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":19843,"byte_end":19912,"line_start":485,"line_end":485,"column_start":5,"column_end":74}},{"value":"/ # Returns","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":19917,"byte_end":19930,"line_start":486,"line_end":486,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":19935,"byte_end":19938,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ * `Metrics` - Sizing and positioning metadata for the rasterized glyph.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":19943,"byte_end":20018,"line_start":488,"line_end":488,"column_start":5,"column_end":80}},{"value":"/ * `Vec<u8>` - Swizzled RGB coverage vector for the glyph. Coverage is a linear scale where 0","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":20023,"byte_end":20119,"line_start":489,"line_end":489,"column_start":5,"column_end":101}},{"value":"/ represents 0% coverage of that subpixel by the glyph and 255 represents 100% coverage. The","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":20124,"byte_end":20218,"line_start":490,"line_end":490,"column_start":5,"column_end":99}},{"value":"/ vec starts at the top left corner of the glyph.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":20223,"byte_end":20274,"line_start":491,"line_end":491,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":20881,"byte_end":20899,"line_start":504,"line_end":504,"column_start":12,"column_end":30},"name":"lookup_glyph_index","qualname":"<Font>::lookup_glyph_index","value":"pub fn lookup_glyph_index(&Self, char) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Finds the internal glyph index for the given character. If the character is not present in\n the font then 0 is returned.\n","sig":null,"attributes":[{"value":"/ Finds the internal glyph index for the given character. If the character is not present in","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":20724,"byte_end":20818,"line_start":501,"line_end":501,"column_start":5,"column_end":99}},{"value":"/ the font then 0 is returned.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":20823,"byte_end":20855,"line_start":502,"line_end":502,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":20860,"byte_end":20869,"line_start":503,"line_end":503,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":21156,"byte_end":21167,"line_start":512,"line_end":512,"column_start":12,"column_end":23},"name":"glyph_count","qualname":"<Font>::glyph_count","value":"pub fn glyph_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Gets the total glyphs in the font.\n","sig":null,"attributes":[{"value":"/ Gets the total glyphs in the font.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":21106,"byte_end":21144,"line_start":511,"line_end":511,"column_start":5,"column_end":43}}]},{"kind":"Mod","id":{"krate":0,"index":107},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"layout","qualname":"::layout","value":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","parent":null,"children":[{"krate":0,"index":108},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":115},{"krate":0,"index":118},{"krate":0,"index":121},{"krate":0,"index":124},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":132},{"krate":0,"index":135},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":146},{"krate":0,"index":565},{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":575},{"krate":0,"index":576},{"krate":0,"index":578},{"krate":0,"index":585},{"krate":0,"index":586},{"krate":0,"index":588},{"krate":0,"index":589},{"krate":0,"index":591},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":602},{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":613},{"krate":0,"index":622},{"krate":0,"index":623},{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":149},{"krate":0,"index":629},{"krate":0,"index":633},{"krate":0,"index":635},{"krate":0,"index":636},{"krate":0,"index":151},{"krate":0,"index":154},{"krate":0,"index":156},{"krate":0,"index":638},{"krate":0,"index":647},{"krate":0,"index":650},{"krate":0,"index":652},{"krate":0,"index":157},{"krate":0,"index":164},{"krate":0,"index":167},{"krate":0,"index":655},{"krate":0,"index":661},{"krate":0,"index":663},{"krate":0,"index":664},{"krate":0,"index":171},{"krate":0,"index":173},{"krate":0,"index":196}],"decl_id":null,"docs":" Tools for laying out strings of text.\n","sig":null,"attributes":[{"value":"/ Tools for laying out strings of text.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/lib.rs","byte_start":251,"byte_end":292,"line_start":13,"line_end":13,"column_start":1,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":566},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":21700,"byte_end":21704,"line_start":17,"line_end":17,"column_start":5,"column_end":9},"name":"Left","qualname":"::layout::HorizontalAlign::Left","value":"HorizontalAlign::Left","parent":{"krate":0,"index":565},"children":[],"decl_id":null,"docs":" Aligns text to the left of the region defined by the max_width.\n","sig":null,"attributes":[{"value":"/ Aligns text to the left of the region defined by the max_width.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":21628,"byte_end":21695,"line_start":16,"line_end":16,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":568},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":21784,"byte_end":21790,"line_start":19,"line_end":19,"column_start":5,"column_end":11},"name":"Center","qualname":"::layout::HorizontalAlign::Center","value":"HorizontalAlign::Center","parent":{"krate":0,"index":565},"children":[],"decl_id":null,"docs":" Aligns text to the center of the region defined by the max_width.\n","sig":null,"attributes":[{"value":"/ Aligns text to the center of the region defined by the max_width.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":21710,"byte_end":21779,"line_start":18,"line_end":18,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":570},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":21869,"byte_end":21874,"line_start":21,"line_end":21,"column_start":5,"column_end":10},"name":"Right","qualname":"::layout::HorizontalAlign::Right","value":"HorizontalAlign::Right","parent":{"krate":0,"index":565},"children":[],"decl_id":null,"docs":" Aligns text to the right of the region defined by the max_width.\n","sig":null,"attributes":[{"value":"/ Aligns text to the right of the region defined by the max_width.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":21796,"byte_end":21864,"line_start":20,"line_end":20,"column_start":5,"column_end":73}}]},{"kind":"Enum","id":{"krate":0,"index":565},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":21606,"byte_end":21621,"line_start":15,"line_end":15,"column_start":10,"column_end":25},"name":"HorizontalAlign","qualname":"::layout::HorizontalAlign","value":"pub enum HorizontalAlign { Left, Center, Right, }","parent":null,"children":[{"krate":0,"index":566},{"krate":0,"index":568},{"krate":0,"index":570}],"decl_id":null,"docs":" Horizontal alignment options for text when a max_width is provided.\n","sig":null,"attributes":[{"value":"/ Horizontal alignment options for text when a max_width is provided.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":21491,"byte_end":21562,"line_start":13,"line_end":13,"column_start":1,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":579},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":22085,"byte_end":22088,"line_start":28,"line_end":28,"column_start":5,"column_end":8},"name":"Top","qualname":"::layout::VerticalAlign::Top","value":"VerticalAlign::Top","parent":{"krate":0,"index":578},"children":[],"decl_id":null,"docs":" Aligns text to the top of the region defined by the max_height.\n","sig":null,"attributes":[{"value":"/ Aligns text to the top of the region defined by the max_height.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":22013,"byte_end":22080,"line_start":27,"line_end":27,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":581},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":22169,"byte_end":22175,"line_start":30,"line_end":30,"column_start":5,"column_end":11},"name":"Middle","qualname":"::layout::VerticalAlign::Middle","value":"VerticalAlign::Middle","parent":{"krate":0,"index":578},"children":[],"decl_id":null,"docs":" Aligns text to the middle of the region defined by the max_height.\n","sig":null,"attributes":[{"value":"/ Aligns text to the middle of the region defined by the max_height.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":22094,"byte_end":22164,"line_start":29,"line_end":29,"column_start":5,"column_end":75}}]},{"kind":"TupleVariant","id":{"krate":0,"index":583},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":22256,"byte_end":22262,"line_start":32,"line_end":32,"column_start":5,"column_end":11},"name":"Bottom","qualname":"::layout::VerticalAlign::Bottom","value":"VerticalAlign::Bottom","parent":{"krate":0,"index":578},"children":[],"decl_id":null,"docs":" Aligns text to the bottom of the region defined by the max_height.\n","sig":null,"attributes":[{"value":"/ Aligns text to the bottom of the region defined by the max_height.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":22181,"byte_end":22251,"line_start":31,"line_end":31,"column_start":5,"column_end":75}}]},{"kind":"Enum","id":{"krate":0,"index":578},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":21993,"byte_end":22006,"line_start":26,"line_end":26,"column_start":10,"column_end":23},"name":"VerticalAlign","qualname":"::layout::VerticalAlign","value":"pub enum VerticalAlign { Top, Middle, Bottom, }","parent":null,"children":[{"krate":0,"index":579},{"krate":0,"index":581},{"krate":0,"index":583}],"decl_id":null,"docs":" Vertical alignment options for text when a max_height is provided.\n","sig":null,"attributes":[{"value":"/ Vertical alignment options for text when a max_height is provided.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":21879,"byte_end":21949,"line_start":24,"line_end":24,"column_start":1,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":592},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":22671,"byte_end":22675,"line_start":41,"line_end":41,"column_start":5,"column_end":9},"name":"Word","qualname":"::layout::WrapStyle::Word","value":"WrapStyle::Word","parent":{"krate":0,"index":591},"children":[],"decl_id":null,"docs":" Word will break lines by the Unicode line breaking algorithm (Standard Annex #14) This will\n generally break lines where you expect them to be broken at and will preserve words.\n","sig":null,"attributes":[{"value":"/ Word will break lines by the Unicode line breaking algorithm (Standard Annex #14) This will","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":22478,"byte_end":22573,"line_start":39,"line_end":39,"column_start":5,"column_end":100}},{"value":"/ generally break lines where you expect them to be broken at and will preserve words.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":22578,"byte_end":22666,"line_start":40,"line_end":40,"column_start":5,"column_end":93}}]},{"kind":"TupleVariant","id":{"krate":0,"index":594},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":22772,"byte_end":22778,"line_start":43,"line_end":43,"column_start":5,"column_end":11},"name":"Letter","qualname":"::layout::WrapStyle::Letter","value":"WrapStyle::Letter","parent":{"krate":0,"index":591},"children":[],"decl_id":null,"docs":" Letter will not preserve words, breaking into a new line after the nearest letter.\n","sig":null,"attributes":[{"value":"/ Letter will not preserve words, breaking into a new line after the nearest letter.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":22681,"byte_end":22767,"line_start":42,"line_end":42,"column_start":5,"column_end":91}}]},{"kind":"Enum","id":{"krate":0,"index":591},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":22462,"byte_end":22471,"line_start":38,"line_end":38,"column_start":10,"column_end":19},"name":"WrapStyle","qualname":"::layout::WrapStyle","value":"pub enum WrapStyle { Word, Letter, }","parent":null,"children":[{"krate":0,"index":592},{"krate":0,"index":594}],"decl_id":null,"docs":" Wrap style is a hint for how strings of text should be wrapped to the next line. Line wrapping\n can happen when the max width/height is reached.\n","sig":null,"attributes":[{"value":"/ Wrap style is a hint for how strings of text should be wrapped to the next line. Line wrapping","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":22267,"byte_end":22365,"line_start":35,"line_end":35,"column_start":1,"column_end":99}},{"value":"/ can happen when the max width/height is reached.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":22366,"byte_end":22418,"line_start":36,"line_end":36,"column_start":1,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":603},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":23126,"byte_end":23137,"line_start":52,"line_end":52,"column_start":5,"column_end":16},"name":"PositiveYUp","qualname":"::layout::CoordinateSystem::PositiveYUp","value":"CoordinateSystem::PositiveYUp","parent":{"krate":0,"index":602},"children":[],"decl_id":null,"docs":" The Y coordinate increases up relative to the window or image. The higher up on the window,\n the more positive Y becomes.\n","sig":null,"attributes":[{"value":"/ The Y coordinate increases up relative to the window or image. The higher up on the window,","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":22989,"byte_end":23084,"line_start":50,"line_end":50,"column_start":5,"column_end":100}},{"value":"/ the more positive Y becomes.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":23089,"byte_end":23121,"line_start":51,"line_end":51,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":605},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":23283,"byte_end":23296,"line_start":55,"line_end":55,"column_start":5,"column_end":18},"name":"PositiveYDown","qualname":"::layout::CoordinateSystem::PositiveYDown","value":"CoordinateSystem::PositiveYDown","parent":{"krate":0,"index":602},"children":[],"decl_id":null,"docs":" The Y coordinate increases down relative to the window or image. The lower down on the\n window, the more positive Y becomes.\n","sig":null,"attributes":[{"value":"/ The Y coordinate increases down relative to the window or image. The lower down on the","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":23143,"byte_end":23233,"line_start":53,"line_end":53,"column_start":5,"column_end":95}},{"value":"/ window, the more positive Y becomes.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":23238,"byte_end":23278,"line_start":54,"line_end":54,"column_start":5,"column_end":45}}]},{"kind":"Enum","id":{"krate":0,"index":602},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":22966,"byte_end":22982,"line_start":49,"line_end":49,"column_start":10,"column_end":26},"name":"CoordinateSystem","qualname":"::layout::CoordinateSystem","value":"pub enum CoordinateSystem { PositiveYUp, PositiveYDown, }","parent":null,"children":[{"krate":0,"index":603},{"krate":0,"index":605}],"decl_id":null,"docs":" The direction that the Y coordinate increases in. Layout needs to be aware of your coordinate\n system to place the glyphs correctly.\n","sig":null,"attributes":[{"value":"/ The direction that the Y coordinate increases in. Layout needs to be aware of your coordinate","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":22783,"byte_end":22880,"line_start":46,"line_end":46,"column_start":1,"column_end":98}},{"value":"/ system to place the glyphs correctly.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":22881,"byte_end":22922,"line_start":47,"line_end":47,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":613},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":23540,"byte_end":23554,"line_start":61,"line_end":61,"column_start":12,"column_end":26},"name":"LayoutSettings","qualname":"::layout::LayoutSettings","value":"LayoutSettings { x, y, max_width, max_height, horizontal_align, vertical_align, wrap_style, wrap_hard_breaks }","parent":null,"children":[{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":617},{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":620},{"krate":0,"index":621}],"decl_id":null,"docs":" Settings to configure how text layout is constrained. Text layout is considered best effort and\n layout may violate the constraints defined here if they prevent text from being laid out.\n","sig":null,"attributes":[{"value":"/ Settings to configure how text layout is constrained. Text layout is considered best effort and","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":23301,"byte_end":23400,"line_start":58,"line_end":58,"column_start":1,"column_end":100}},{"value":"/ layout may violate the constraints defined here if they prevent text from being laid out.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":23401,"byte_end":23494,"line_start":59,"line_end":59,"column_start":1,"column_end":94}}]},{"kind":"Field","id":{"krate":0,"index":614},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":23615,"byte_end":23616,"line_start":63,"line_end":63,"column_start":9,"column_end":10},"name":"x","qualname":"::layout::LayoutSettings::x","value":"f32","parent":{"krate":0,"index":613},"children":[],"decl_id":null,"docs":" The leftmost boundary of the text region.\n","sig":null,"attributes":[{"value":"/ The leftmost boundary of the text region.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":23561,"byte_end":23606,"line_start":62,"line_end":62,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":615},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":23680,"byte_end":23681,"line_start":65,"line_end":65,"column_start":9,"column_end":10},"name":"y","qualname":"::layout::LayoutSettings::y","value":"f32","parent":{"krate":0,"index":613},"children":[],"decl_id":null,"docs":" The topmost boundary of the text region.\n","sig":null,"attributes":[{"value":"/ The topmost boundary of the text region.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":23627,"byte_end":23671,"line_start":64,"line_end":64,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":616},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":24007,"byte_end":24016,"line_start":70,"line_end":70,"column_start":9,"column_end":18},"name":"max_width","qualname":"::layout::LayoutSettings::max_width","value":"core::option::Option<f32>","parent":{"krate":0,"index":613},"children":[],"decl_id":null,"docs":" An optional rightmost boundary on the text region. A line of text that exceeds the\n max_width is wrapped to the line below. If the width of a glyph is larger than the\n max_width, the glyph will overflow past the max_width. The application is responsible for\n handling the overflow.\n","sig":null,"attributes":[{"value":"/ An optional rightmost boundary on the text region. A line of text that exceeds the","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":23692,"byte_end":23778,"line_start":66,"line_end":66,"column_start":5,"column_end":91}},{"value":"/ max_width is wrapped to the line below. If the width of a glyph is larger than the","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":23783,"byte_end":23869,"line_start":67,"line_end":67,"column_start":5,"column_end":91}},{"value":"/ max_width, the glyph will overflow past the max_width. The application is responsible for","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":23874,"byte_end":23967,"line_start":68,"line_end":68,"column_start":5,"column_end":98}},{"value":"/ handling the overflow.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":23972,"byte_end":23998,"line_start":69,"line_end":69,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":617},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":24289,"byte_end":24299,"line_start":74,"line_end":74,"column_start":9,"column_end":19},"name":"max_height","qualname":"::layout::LayoutSettings::max_height","value":"core::option::Option<f32>","parent":{"krate":0,"index":613},"children":[],"decl_id":null,"docs":" An optional bottom boundary on the text region. This is used for positioning the\n vertical_align option. Text that exceeds the defined max_height will overflow past it. The\n application is responsible for handling the overflow.\n","sig":null,"attributes":[{"value":"/ An optional bottom boundary on the text region. This is used for positioning the","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":24035,"byte_end":24119,"line_start":71,"line_end":71,"column_start":5,"column_end":89}},{"value":"/ vertical_align option. Text that exceeds the defined max_height will overflow past it. The","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":24124,"byte_end":24218,"line_start":72,"line_end":72,"column_start":5,"column_end":99}},{"value":"/ application is responsible for handling the overflow.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":24223,"byte_end":24280,"line_start":73,"line_end":73,"column_start":5,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":618},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":24404,"byte_end":24420,"line_start":76,"line_end":76,"column_start":9,"column_end":25},"name":"horizontal_align","qualname":"::layout::LayoutSettings::horizontal_align","value":"layout::HorizontalAlign","parent":{"krate":0,"index":613},"children":[],"decl_id":null,"docs":" The default is Left. This option does nothing if the max_width isn't set.\n","sig":null,"attributes":[{"value":"/ The default is Left. This option does nothing if the max_width isn't set.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":24318,"byte_end":24395,"line_start":75,"line_end":75,"column_start":5,"column_end":82}}]},{"kind":"Field","id":{"krate":0,"index":619},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":24529,"byte_end":24543,"line_start":78,"line_end":78,"column_start":9,"column_end":23},"name":"vertical_align","qualname":"::layout::LayoutSettings::vertical_align","value":"layout::VerticalAlign","parent":{"krate":0,"index":613},"children":[],"decl_id":null,"docs":" The default is Top. This option does nothing if the max_height isn't set.\n","sig":null,"attributes":[{"value":"/ The default is Top. This option does nothing if the max_height isn't set.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":24443,"byte_end":24520,"line_start":77,"line_end":77,"column_start":5,"column_end":82}}]},{"kind":"Field","id":{"krate":0,"index":620},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":24749,"byte_end":24759,"line_start":81,"line_end":81,"column_start":9,"column_end":19},"name":"wrap_style","qualname":"::layout::LayoutSettings::wrap_style","value":"layout::WrapStyle","parent":{"krate":0,"index":613},"children":[],"decl_id":null,"docs":" The default is Word. Wrap style is a hint for how strings of text should be wrapped to the\n next line. Line wrapping can happen when the max width/height is reached.\n","sig":null,"attributes":[{"value":"/ The default is Word. Wrap style is a hint for how strings of text should be wrapped to the","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":24564,"byte_end":24658,"line_start":79,"line_end":79,"column_start":5,"column_end":99}},{"value":"/ next line. Line wrapping can happen when the max width/height is reached.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":24663,"byte_end":24740,"line_start":80,"line_end":80,"column_start":5,"column_end":82}}]},{"kind":"Field","id":{"krate":0,"index":621},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":24965,"byte_end":24981,"line_start":84,"line_end":84,"column_start":9,"column_end":25},"name":"wrap_hard_breaks","qualname":"::layout::LayoutSettings::wrap_hard_breaks","value":"bool","parent":{"krate":0,"index":613},"children":[],"decl_id":null,"docs":" The default is true. This option enables hard breaks, like new line characters, to\n prematurely wrap lines. If false, hard breaks will not prematurely create a new line.\n","sig":null,"attributes":[{"value":"/ The default is true. This option enables hard breaks, like new line characters, to","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":24776,"byte_end":24862,"line_start":82,"line_end":82,"column_start":5,"column_end":91}},{"value":"/ prematurely wrap lines. If false, hard breaks will not prematurely create a new line.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":24867,"byte_end":24956,"line_start":83,"line_end":83,"column_start":5,"column_end":94}}]},{"kind":"Struct","id":{"krate":0,"index":629},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":25608,"byte_end":25625,"line_start":105,"line_end":105,"column_start":12,"column_end":29},"name":"GlyphRasterConfig","qualname":"::layout::GlyphRasterConfig","value":"GlyphRasterConfig { glyph_index, px, font_index }","parent":null,"children":[{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":632}],"decl_id":null,"docs":" Configuration for rasterizing a glyph. This struct is also a hashable key that can be used to\n uniquely identify a rasterized glyph for applications that want to cache glyphs.\n","sig":null,"attributes":[{"value":"/ Configuration for rasterizing a glyph. This struct is also a hashable key that can be used to","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":25384,"byte_end":25481,"line_start":102,"line_end":102,"column_start":1,"column_end":98}},{"value":"/ uniquely identify a rasterized glyph for applications that want to cache glyphs.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":25482,"byte_end":25566,"line_start":103,"line_end":103,"column_start":1,"column_end":85}}]},{"kind":"Field","id":{"krate":0,"index":630},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":25703,"byte_end":25714,"line_start":107,"line_end":107,"column_start":9,"column_end":20},"name":"glyph_index","qualname":"::layout::GlyphRasterConfig::glyph_index","value":"u16","parent":{"krate":0,"index":629},"children":[],"decl_id":null,"docs":" The glyph index represented by the glyph being positioned.\n","sig":null,"attributes":[{"value":"/ The glyph index represented by the glyph being positioned.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":25632,"byte_end":25694,"line_start":106,"line_end":106,"column_start":5,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":631},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":25784,"byte_end":25786,"line_start":109,"line_end":109,"column_start":9,"column_end":11},"name":"px","qualname":"::layout::GlyphRasterConfig::px","value":"f32","parent":{"krate":0,"index":629},"children":[],"decl_id":null,"docs":" The scale of the glyph being positioned in px.\n","sig":null,"attributes":[{"value":"/ The scale of the glyph being positioned in px.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":25725,"byte_end":25775,"line_start":108,"line_end":108,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":632},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":25867,"byte_end":25877,"line_start":111,"line_end":111,"column_start":9,"column_end":19},"name":"font_index","qualname":"::layout::GlyphRasterConfig::font_index","value":"usize","parent":{"krate":0,"index":629},"children":[],"decl_id":null,"docs":" The index of the font used in layout to raster the glyph.\n","sig":null,"attributes":[{"value":"/ The index of the font used in layout to raster the glyph.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":25797,"byte_end":25858,"line_start":110,"line_end":110,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":638},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":26396,"byte_end":26409,"line_start":132,"line_end":132,"column_start":12,"column_end":25},"name":"GlyphPosition","qualname":"::layout::GlyphPosition","value":"GlyphPosition { key, x, y, width, height, char_data, user_data }","parent":null,"children":[{"krate":0,"index":640},{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":645},{"krate":0,"index":646}],"decl_id":null,"docs":" A positioned scaled glyph.\n","sig":null,"attributes":[{"value":"/ A positioned scaled glyph.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":26324,"byte_end":26354,"line_start":130,"line_end":130,"column_start":1,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":640},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":26521,"byte_end":26524,"line_start":134,"line_end":134,"column_start":9,"column_end":12},"name":"key","qualname":"::layout::GlyphPosition::key","value":"layout::GlyphRasterConfig","parent":{"krate":0,"index":638},"children":[],"decl_id":null,"docs":" Hashable key that can be used to uniquely identify a rasterized glyph.\n","sig":null,"attributes":[{"value":"/ Hashable key that can be used to uniquely identify a rasterized glyph.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":26438,"byte_end":26512,"line_start":133,"line_end":133,"column_start":5,"column_end":79}}]},{"kind":"Field","id":{"krate":0,"index":641},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":26705,"byte_end":26706,"line_start":137,"line_end":137,"column_start":9,"column_end":10},"name":"x","qualname":"::layout::GlyphPosition::x","value":"f32","parent":{"krate":0,"index":638},"children":[],"decl_id":null,"docs":" The xmin of the glyph bounding box. This represents the left side of the glyph. Dimensions\n are in pixels, and are always whole numbers.\n","sig":null,"attributes":[{"value":"/ The xmin of the glyph bounding box. This represents the left side of the glyph. Dimensions","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":26549,"byte_end":26643,"line_start":135,"line_end":135,"column_start":5,"column_end":99}},{"value":"/ are in pixels, and are always whole numbers.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":26648,"byte_end":26696,"line_start":136,"line_end":136,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":642},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":27050,"byte_end":27051,"line_start":142,"line_end":142,"column_start":9,"column_end":10},"name":"y","qualname":"::layout::GlyphPosition::y","value":"f32","parent":{"krate":0,"index":638},"children":[],"decl_id":null,"docs":" The ymin of the glyph bounding box. If your coordinate system is PositiveYUp, this\n represents the bottom side of the glyph. If your coordinate system is PositiveYDown, this\n represents the top side of the glyph. This is like this so that (y + height) always produces\n the other bound for the glyph.\n","sig":null,"attributes":[{"value":"/ The ymin of the glyph bounding box. If your coordinate system is PositiveYUp, this","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":26717,"byte_end":26803,"line_start":138,"line_end":138,"column_start":5,"column_end":91}},{"value":"/ represents the bottom side of the glyph. If your coordinate system is PositiveYDown, this","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":26808,"byte_end":26901,"line_start":139,"line_end":139,"column_start":5,"column_end":98}},{"value":"/ represents the top side of the glyph. This is like this so that (y + height) always produces","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":26906,"byte_end":27002,"line_start":140,"line_end":140,"column_start":5,"column_end":101}},{"value":"/ the other bound for the glyph.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":27007,"byte_end":27041,"line_start":141,"line_end":141,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":643},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":27124,"byte_end":27129,"line_start":144,"line_end":144,"column_start":9,"column_end":14},"name":"width","qualname":"::layout::GlyphPosition::width","value":"usize","parent":{"krate":0,"index":638},"children":[],"decl_id":null,"docs":" The width of the glyph. Dimensions are in pixels.\n","sig":null,"attributes":[{"value":"/ The width of the glyph. Dimensions are in pixels.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":27062,"byte_end":27115,"line_start":143,"line_end":143,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":644},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":27205,"byte_end":27211,"line_start":146,"line_end":146,"column_start":9,"column_end":15},"name":"height","qualname":"::layout::GlyphPosition::height","value":"usize","parent":{"krate":0,"index":638},"children":[],"decl_id":null,"docs":" The height of the glyph. Dimensions are in pixels.\n","sig":null,"attributes":[{"value":"/ The height of the glyph. Dimensions are in pixels.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":27142,"byte_end":27196,"line_start":145,"line_end":145,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":645},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":27315,"byte_end":27324,"line_start":148,"line_end":148,"column_start":9,"column_end":18},"name":"char_data","qualname":"::layout::GlyphPosition::char_data","value":"unicode::CharacterData","parent":{"krate":0,"index":638},"children":[],"decl_id":null,"docs":" Additional metadata associated with the character used to generate this glyph.\n","sig":null,"attributes":[{"value":"/ Additional metadata associated with the character used to generate this glyph.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":27224,"byte_end":27306,"line_start":147,"line_end":147,"column_start":5,"column_end":87}}]},{"kind":"Field","id":{"krate":0,"index":646},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":27435,"byte_end":27444,"line_start":150,"line_end":150,"column_start":9,"column_end":18},"name":"user_data","qualname":"::layout::GlyphPosition::user_data","value":"U","parent":{"krate":0,"index":638},"children":[],"decl_id":null,"docs":" Custom user data associated with the text styled used to generate this glyph.\n","sig":null,"attributes":[{"value":"/ Custom user data associated with the text styled used to generate this glyph.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":27345,"byte_end":27426,"line_start":149,"line_end":149,"column_start":5,"column_end":86}}]},{"kind":"Struct","id":{"krate":0,"index":157},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":27510,"byte_end":27519,"line_start":154,"line_end":154,"column_start":12,"column_end":21},"name":"TextStyle","qualname":"::layout::TextStyle","value":"TextStyle { text, px, font_index, user_data }","parent":null,"children":[{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163}],"decl_id":null,"docs":" A style description for a segment of text.\n","sig":null,"attributes":[{"value":"/ A style description for a segment of text.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":27452,"byte_end":27498,"line_start":153,"line_end":153,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":160},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":27584,"byte_end":27588,"line_start":156,"line_end":156,"column_start":9,"column_end":13},"name":"text","qualname":"::layout::TextStyle::text","value":"&'a str","parent":{"krate":0,"index":157},"children":[],"decl_id":null,"docs":" The text to layout.\n","sig":null,"attributes":[{"value":"/ The text to layout.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":27552,"byte_end":27575,"line_start":155,"line_end":155,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":161},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":27653,"byte_end":27655,"line_start":158,"line_end":158,"column_start":9,"column_end":11},"name":"px","qualname":"::layout::TextStyle::px","value":"f32","parent":{"krate":0,"index":157},"children":[],"decl_id":null,"docs":" The scale of the text in pixel units.\n","sig":null,"attributes":[{"value":"/ The scale of the text in pixel units.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":27603,"byte_end":27644,"line_start":157,"line_end":157,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":162},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":27710,"byte_end":27720,"line_start":160,"line_end":160,"column_start":9,"column_end":19},"name":"font_index","qualname":"::layout::TextStyle::font_index","value":"usize","parent":{"krate":0,"index":157},"children":[],"decl_id":null,"docs":" The font to layout the text in.\n","sig":null,"attributes":[{"value":"/ The font to layout the text in.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":27666,"byte_end":27701,"line_start":159,"line_end":159,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":163},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":27820,"byte_end":27829,"line_start":162,"line_end":162,"column_start":9,"column_end":18},"name":"user_data","qualname":"::layout::TextStyle::user_data","value":"U","parent":{"krate":0,"index":157},"children":[],"decl_id":null,"docs":" Additional user data to associate with glyphs produced by this text style.\n","sig":null,"attributes":[{"value":"/ Additional user data to associate with glyphs produced by this text style.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":27733,"byte_end":27811,"line_start":161,"line_end":161,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":27873,"byte_end":27876,"line_start":166,"line_end":166,"column_start":12,"column_end":15},"name":"new","qualname":"<TextStyle>::new","value":"pub fn new(&'a str, f32, usize) -> TextStyle","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":28119,"byte_end":28133,"line_start":177,"line_end":177,"column_start":12,"column_end":26},"name":"with_user_data","qualname":"<TextStyle>::with_user_data","value":"pub fn with_user_data(&'a str, f32, usize, U) -> TextStyle","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":173},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":29241,"byte_end":29247,"line_start":216,"line_end":216,"column_start":12,"column_end":18},"name":"Layout","qualname":"::layout::Layout","value":"Layout {  }","parent":null,"children":[{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195}],"decl_id":null,"docs":" Text layout requires a small amount of heap usage which is contained in the Layout struct. This\n context is reused between layout calls. Reusing the Layout struct will greatly reduce memory\n allocations and is advisable for performance.\n","sig":null,"attributes":[{"value":"/ Text layout requires a small amount of heap usage which is contained in the Layout struct. This","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":28983,"byte_end":29082,"line_start":213,"line_end":213,"column_start":1,"column_end":100}},{"value":"/ context is reused between layout calls. Reusing the Layout struct will greatly reduce memory","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":29083,"byte_end":29179,"line_start":214,"line_end":214,"column_start":1,"column_end":97}},{"value":"/ allocations and is advisable for performance.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":29180,"byte_end":29229,"line_start":215,"line_end":215,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":30096,"byte_end":30099,"line_start":246,"line_end":246,"column_start":12,"column_end":15},"name":"new","qualname":"<Layout<U>>::new","value":"pub fn new(CoordinateSystem) -> Layout<U>","parent":null,"children":[],"decl_id":null,"docs":" Creates a layout instance. This requires the direction that the Y coordinate increases in.\n Layout needs to be aware of your coordinate system to place the glyphs correctly.\n","sig":null,"attributes":[{"value":"/ Creates a layout instance. This requires the direction that the Y coordinate increases in.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":29900,"byte_end":29994,"line_start":244,"line_end":244,"column_start":5,"column_end":99}},{"value":"/ Layout needs to be aware of your coordinate system to place the glyphs correctly.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":29999,"byte_end":30084,"line_start":245,"line_end":245,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":31146,"byte_end":31151,"line_start":278,"line_end":278,"column_start":12,"column_end":17},"name":"reset","qualname":"<Layout<U>>::reset","value":"pub fn reset(&mut Self, &LayoutSettings)","parent":null,"children":[],"decl_id":null,"docs":" Resets the current layout settings and clears all appended text.\n","sig":null,"attributes":[{"value":"/ Resets the current layout settings and clears all appended text.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":31066,"byte_end":31134,"line_start":277,"line_end":277,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":32310,"byte_end":32315,"line_start":310,"line_end":310,"column_start":12,"column_end":17},"name":"clear","qualname":"<Layout<U>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Keeps current layout settings but clears all appended text.\n","sig":null,"attributes":[{"value":"/ Keeps current layout settings but clears all appended text.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":32235,"byte_end":32298,"line_start":309,"line_end":309,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":32889,"byte_end":32895,"line_start":329,"line_end":329,"column_start":12,"column_end":18},"name":"height","qualname":"<Layout<U>>::height","value":"pub fn height(&Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Gets the current height of the appended text.\n","sig":null,"attributes":[{"value":"/ Gets the current height of the appended text.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":32828,"byte_end":32877,"line_start":328,"line_end":328,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":33151,"byte_end":33156,"line_start":338,"line_end":338,"column_start":12,"column_end":17},"name":"lines","qualname":"<Layout<U>>::lines","value":"pub fn lines(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Gets the current line count. If there's no text this still returns 1.\n","sig":null,"attributes":[{"value":"/ Gets the current line count. If there's no text this still returns 1.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":33066,"byte_end":33139,"line_start":337,"line_end":337,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":33794,"byte_end":33800,"line_start":350,"line_end":350,"column_start":12,"column_end":18},"name":"append","qualname":"<Layout<U>>::append","value":"pub fn append<T: Borrow<Font>>(&mut Self, &[T], &TextStyle<, U>)","parent":null,"children":[],"decl_id":null,"docs":" Performs layout for text horizontally, and wrapping vertically. This makes a best effort\n attempt at laying out the text defined in the given styles with the provided layout\n settings. Text may overflow out of the bounds defined in the layout settings and it's up\n to the application to decide how to deal with this.","sig":null,"attributes":[{"value":"/ Performs layout for text horizontally, and wrapping vertically. This makes a best effort","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":33218,"byte_end":33310,"line_start":342,"line_end":342,"column_start":5,"column_end":97}},{"value":"/ attempt at laying out the text defined in the given styles with the provided layout","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":33315,"byte_end":33402,"line_start":343,"line_end":343,"column_start":5,"column_end":92}},{"value":"/ settings. Text may overflow out of the bounds defined in the layout settings and it's up","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":33407,"byte_end":33499,"line_start":344,"line_end":344,"column_start":5,"column_end":97}},{"value":"/ to the application to decide how to deal with this.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":33504,"byte_end":33559,"line_start":345,"line_end":345,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":33564,"byte_end":33567,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ Characters from the input string can only be omitted from the output, they are never","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":33572,"byte_end":33660,"line_start":347,"line_end":347,"column_start":5,"column_end":93}},{"value":"/ reordered. The output buffer will always contain characters in the order they were defined","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":33665,"byte_end":33759,"line_start":348,"line_end":348,"column_start":5,"column_end":99}},{"value":"/ in the styles.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":33764,"byte_end":33782,"line_start":349,"line_end":349,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":37204,"byte_end":37210,"line_start":424,"line_end":424,"column_start":12,"column_end":18},"name":"glyphs","qualname":"<Layout<U>>::glyphs","value":"pub fn glyphs(&'a mut Self) -> &'a Vec<GlyphPosition<U>>","parent":null,"children":[],"decl_id":null,"docs":" Gets the current laid out glyphs. Additional layout may be performed lazily here.\n","sig":null,"attributes":[{"value":"/ Gets the current laid out glyphs. Additional layout may be performed lazily here.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":37107,"byte_end":37192,"line_start":423,"line_end":423,"column_start":5,"column_end":90}}]},{"kind":"Struct","id":{"krate":0,"index":787},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/unicode/mod.rs","byte_start":83394,"byte_end":83407,"line_start":154,"line_end":154,"column_start":12,"column_end":25},"name":"CharacterData","qualname":"::unicode::CharacterData","value":"CharacterData {  }","parent":null,"children":[{"krate":0,"index":788}],"decl_id":null,"docs":" Miscellaneous metadata associated with a character.\n","sig":null,"attributes":[{"value":"/ Miscellaneous metadata associated with a character.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/unicode/mod.rs","byte_start":83282,"byte_end":83337,"line_start":152,"line_end":152,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":483},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/unicode/mod.rs","byte_start":83574,"byte_end":83582,"line_start":163,"line_end":163,"column_start":12,"column_end":20},"name":"classify","qualname":"<CharacterData>::classify","value":"pub fn classify(char, usize) -> CharacterData","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/unicode/mod.rs","byte_start":84125,"byte_end":84138,"line_start":182,"line_end":182,"column_start":12,"column_end":25},"name":"is_whitespace","qualname":"<CharacterData>::is_whitespace","value":"pub fn is_whitespace(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Marks if the character is an ASCII whitespace character.\n","sig":null,"attributes":[{"value":"/ Marks if the character is an ASCII whitespace character.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/unicode/mod.rs","byte_start":84053,"byte_end":84113,"line_start":181,"line_end":181,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":485},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/unicode/mod.rs","byte_start":84287,"byte_end":84297,"line_start":187,"line_end":187,"column_start":12,"column_end":22},"name":"is_control","qualname":"<CharacterData>::is_control","value":"pub fn is_control(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Marks if the character is an ASCII control character.\n","sig":null,"attributes":[{"value":"/ Marks if the character is an ASCII control character.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/unicode/mod.rs","byte_start":84218,"byte_end":84275,"line_start":186,"line_end":186,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":486},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/unicode/mod.rs","byte_start":84449,"byte_end":84459,"line_start":192,"line_end":192,"column_start":12,"column_end":22},"name":"is_missing","qualname":"<CharacterData>::is_missing","value":"pub fn is_missing(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Marks if the character is missing from its associated font.\n","sig":null,"attributes":[{"value":"/ Marks if the character is missing from its associated font.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/unicode/mod.rs","byte_start":84374,"byte_end":84437,"line_start":191,"line_end":191,"column_start":5,"column_end":68}}]},{"kind":"Type","id":{"krate":0,"index":488},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/lib.rs","byte_start":432,"byte_end":442,"line_start":23,"line_end":23,"column_start":10,"column_end":20},"name":"FontResult","qualname":"::FontResult","value":"Result<T, &'static str>","parent":null,"children":[],"decl_id":null,"docs":" Alias for Result<T, &'static str>.\n","sig":null,"attributes":[{"value":"/ Alias for Result<T, &'static str>.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/lib.rs","byte_start":384,"byte_end":422,"line_start":22,"line_end":22,"column_start":1,"column_end":39}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":1394,"byte_end":1407,"line_start":30,"line_end":30,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":1571,"byte_end":1584,"line_start":41,"line_end":41,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":2961,"byte_end":2968,"line_start":76,"line_end":76,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":4017,"byte_end":4028,"line_start":107,"line_end":107,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":74},{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":5114,"byte_end":5119,"line_start":141,"line_end":141,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":77}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":6024,"byte_end":6036,"line_start":165,"line_end":165,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":6580,"byte_end":6584,"line_start":186,"line_end":186,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":7738,"byte_end":7742,"line_start":218,"line_end":218,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":86},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":25009,"byte_end":25023,"line_start":87,"line_end":87,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":25903,"byte_end":25920,"line_start":114,"line_end":114,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":26112,"byte_end":26129,"line_start":122,"line_end":122,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":26302,"byte_end":26319,"line_start":128,"line_end":128,"column_start":13,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":27846,"byte_end":27855,"line_start":165,"line_end":165,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":28089,"byte_end":28098,"line_start":176,"line_end":176,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":28766,"byte_end":28777,"line_start":201,"line_end":201,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":29884,"byte_end":29890,"line_start":243,"line_end":243,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/math.rs","byte_start":38622,"byte_end":38626,"line_start":18,"line_end":18,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/math.rs","byte_start":38906,"byte_end":38915,"line_start":37,"line_end":37,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/math.rs","byte_start":41164,"byte_end":41173,"line_start":117,"line_end":117,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/math.rs","byte_start":43092,"byte_end":43097,"line_start":191,"line_end":191,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/math.rs","byte_start":43207,"byte_end":43212,"line_start":200,"line_end":200,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/math.rs","byte_start":44243,"byte_end":44247,"line_start":247,"line_end":247,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":262},{"krate":0,"index":265}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/math.rs","byte_start":46340,"byte_end":46347,"line_start":332,"line_end":332,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":272}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/math.rs","byte_start":46547,"byte_end":46555,"line_start":343,"line_end":343,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/math.rs","byte_start":49069,"byte_end":49077,"line_start":408,"line_end":408,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":280},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/platform/simd_x86.rs","byte_start":53596,"byte_end":53601,"line_start":14,"line_end":14,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/platform/simd_x86.rs","byte_start":54846,"byte_end":54851,"line_start":62,"line_end":62,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":323},{"krate":0,"index":324}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/platform/simd_x86.rs","byte_start":55025,"byte_end":55030,"line_start":70,"line_end":70,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/platform/simd_x86.rs","byte_start":55179,"byte_end":55184,"line_start":77,"line_end":77,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":328},{"krate":0,"index":329}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/platform/simd_x86.rs","byte_start":55358,"byte_end":55363,"line_start":85,"line_end":85,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/platform/simd_x86.rs","byte_start":55512,"byte_end":55517,"line_start":92,"line_end":92,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":333},{"krate":0,"index":334}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/platform/simd_x86.rs","byte_start":55691,"byte_end":55696,"line_start":100,"line_end":100,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/platform/simd_x86.rs","byte_start":55845,"byte_end":55850,"line_start":107,"line_end":107,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":338},{"krate":0,"index":339}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/platform/simd_x86.rs","byte_start":56024,"byte_end":56029,"line_start":115,"line_end":115,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":341}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/raster.rs","byte_start":74948,"byte_end":74954,"line_start":19,"line_end":19,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/unicode/mod.rs","byte_start":81119,"byte_end":81132,"line_start":70,"line_end":70,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":474}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/unicode/mod.rs","byte_start":82075,"byte_end":82086,"line_start":112,"line_end":112,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":478}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/unicode/mod.rs","byte_start":83432,"byte_end":83445,"line_start":158,"line_end":158,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":480},{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":486}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/lib.rs","byte_start":301,"byte_end":307,"line_start":14,"line_end":14,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":107}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":1394,"byte_end":1407,"line_start":30,"line_end":30,"column_start":18,"column_end":31},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":490},"to":{"krate":1,"index":2997}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":1571,"byte_end":1584,"line_start":41,"line_end":41,"column_start":6,"column_end":19},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":490},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":2961,"byte_end":2968,"line_start":76,"line_end":76,"column_start":18,"column_end":25},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":504},"to":{"krate":1,"index":2997}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":4017,"byte_end":4028,"line_start":107,"line_end":107,"column_start":6,"column_end":17},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":521},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":5114,"byte_end":5119,"line_start":141,"line_end":141,"column_start":18,"column_end":23},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":535},"to":{"krate":1,"index":2997}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":6024,"byte_end":6036,"line_start":165,"line_end":165,"column_start":18,"column_end":30},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":543},"to":{"krate":1,"index":2997}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":6580,"byte_end":6584,"line_start":186,"line_end":186,"column_start":27,"column_end":31},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":555},"to":{"krate":1,"index":9553}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/font.rs","byte_start":7738,"byte_end":7742,"line_start":218,"line_end":218,"column_start":6,"column_end":10},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":555},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":25009,"byte_end":25023,"line_start":87,"line_end":87,"column_start":18,"column_end":32},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":613},"to":{"krate":1,"index":2997}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":25903,"byte_end":25920,"line_start":114,"line_end":114,"column_start":15,"column_end":32},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":629},"to":{"krate":1,"index":9760}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":26112,"byte_end":26129,"line_start":122,"line_end":122,"column_start":20,"column_end":37},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":629},"to":{"krate":1,"index":2670}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":26302,"byte_end":26319,"line_start":128,"line_end":128,"column_start":13,"column_end":30},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":629},"to":{"krate":1,"index":2675}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":27846,"byte_end":27855,"line_start":165,"line_end":165,"column_start":10,"column_end":19},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":157},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":28089,"byte_end":28098,"line_start":176,"line_end":176,"column_start":27,"column_end":36},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":157},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":28766,"byte_end":28777,"line_start":201,"line_end":201,"column_start":18,"column_end":29},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":655},"to":{"krate":1,"index":2997}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/layout.rs","byte_start":29884,"byte_end":29890,"line_start":243,"line_end":243,"column_start":27,"column_end":33},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":173},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/math.rs","byte_start":38622,"byte_end":38626,"line_start":18,"line_end":18,"column_start":18,"column_end":22},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":666},"to":{"krate":1,"index":2997}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/math.rs","byte_start":38906,"byte_end":38915,"line_start":37,"line_end":37,"column_start":6,"column_end":15},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":680},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/math.rs","byte_start":41164,"byte_end":41173,"line_start":117,"line_end":117,"column_start":6,"column_end":15},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":694},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/math.rs","byte_start":43092,"byte_end":43097,"line_start":191,"line_end":191,"column_start":18,"column_end":23},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":707},"to":{"krate":1,"index":2997}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/math.rs","byte_start":43207,"byte_end":43212,"line_start":200,"line_end":200,"column_start":6,"column_end":11},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":707},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/math.rs","byte_start":44243,"byte_end":44247,"line_start":247,"line_end":247,"column_start":6,"column_end":10},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":719},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/math.rs","byte_start":46340,"byte_end":46347,"line_start":332,"line_end":332,"column_start":6,"column_end":13},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":266},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/math.rs","byte_start":46547,"byte_end":46555,"line_start":343,"line_end":343,"column_start":37,"column_end":45},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":727},"to":{"krate":7,"index":1503}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/math.rs","byte_start":49069,"byte_end":49077,"line_start":408,"line_end":408,"column_start":6,"column_end":14},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":727},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/platform/simd_x86.rs","byte_start":53596,"byte_end":53601,"line_start":14,"line_end":14,"column_start":6,"column_end":11},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":738},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/platform/simd_x86.rs","byte_start":54846,"byte_end":54851,"line_start":62,"line_end":62,"column_start":14,"column_end":19},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":738},"to":{"krate":1,"index":3086}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/platform/simd_x86.rs","byte_start":55025,"byte_end":55030,"line_start":70,"line_end":70,"column_start":20,"column_end":25},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":738},"to":{"krate":1,"index":3117}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/platform/simd_x86.rs","byte_start":55179,"byte_end":55184,"line_start":77,"line_end":77,"column_start":14,"column_end":19},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":738},"to":{"krate":1,"index":3091}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/platform/simd_x86.rs","byte_start":55358,"byte_end":55363,"line_start":85,"line_end":85,"column_start":20,"column_end":25},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":738},"to":{"krate":1,"index":3121}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/platform/simd_x86.rs","byte_start":55512,"byte_end":55517,"line_start":92,"line_end":92,"column_start":14,"column_end":19},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":738},"to":{"krate":1,"index":3096}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/platform/simd_x86.rs","byte_start":55691,"byte_end":55696,"line_start":100,"line_end":100,"column_start":20,"column_end":25},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":738},"to":{"krate":1,"index":3125}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/platform/simd_x86.rs","byte_start":55845,"byte_end":55850,"line_start":107,"line_end":107,"column_start":14,"column_end":19},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":738},"to":{"krate":1,"index":3101}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/platform/simd_x86.rs","byte_start":56024,"byte_end":56029,"line_start":115,"line_end":115,"column_start":20,"column_end":25},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":738},"to":{"krate":1,"index":3129}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/raster.rs","byte_start":74948,"byte_end":74954,"line_start":19,"line_end":19,"column_start":6,"column_end":12},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":440},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/unicode/mod.rs","byte_start":81119,"byte_end":81132,"line_start":70,"line_end":70,"column_start":6,"column_end":19},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":762},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/unicode/mod.rs","byte_start":82075,"byte_end":82086,"line_start":112,"line_end":112,"column_start":6,"column_end":17},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":780},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/fontdue-0.5.2/src/unicode/mod.rs","byte_start":83432,"byte_end":83445,"line_start":158,"line_end":158,"column_start":6,"column_end":19},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":787},"to":{"krate":4294967295,"index":4294967295}}]}