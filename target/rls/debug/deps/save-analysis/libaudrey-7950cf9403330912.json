{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0","program":"/usr/bin/rls","arguments":["--crate-name","audrey","--edition=2018","/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/lib.rs","--json=diagnostic-rendered-ansi,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"hound\"","--cfg","feature=\"lewton\"","--cfg","feature=\"ogg_vorbis\"","--cfg","feature=\"wav\"","-C","metadata=7950cf9403330912","-C","extra-filename=-7950cf9403330912","--out-dir","/home/louie/Programs/maquinitas/target/rls/debug/deps","-L","dependency=/home/louie/Programs/maquinitas/target/rls/debug/deps","--extern","dasp_frame=/home/louie/Programs/maquinitas/target/rls/debug/deps/libdasp_frame-27009d53f7eab7aa.rmeta","--extern","dasp_sample=/home/louie/Programs/maquinitas/target/rls/debug/deps/libdasp_sample-161b0e5a8cd7fc53.rmeta","--extern","hound=/home/louie/Programs/maquinitas/target/rls/debug/deps/libhound-b106e116ac4a5a22.rmeta","--extern","lewton=/home/louie/Programs/maquinitas/target/rls/debug/deps/liblewton-d2463391b81ba3a9.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/usr"],"output":"/home/louie/Programs/maquinitas/target/rls/debug/deps/libaudrey-7950cf9403330912.rmeta"},"prelude":{"crate_id":{"name":"audrey","disambiguator":[2731468574421772722,0]},"crate_root":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src","external_crates":[{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12023920652292776473,0]}},{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[8607811298988957190,0]}},{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[9950803289178341956,0]}},{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13474909584011716809,0]}},{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[14989130687617550202,0]}},{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[16102964373074206153,0]}},{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[5778140418855102640,0]}},{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[4313679198529278428,0]}},{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[4133710094375488264,0]}},{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[7595865551076237336,0]}},{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[7540130326731804087,0]}},{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[12866123005810308726,0]}},{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[1553467655670750388,0]}},{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[15291019179027074616,0]}},{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[985971798445026598,0]}},{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[13801465309967224704,0]}},{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[2515263550385514547,0]}},{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[15896354199165419201,0]}},{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[14578328142683063560,0]}},{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/lib.rs","num":20,"id":{"name":"dasp_frame","disambiguator":[17015187330036316926,0]}},{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/lib.rs","num":21,"id":{"name":"dasp_sample","disambiguator":[17472564141048077419,0]}},{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/lib.rs","num":22,"id":{"name":"hound","disambiguator":[4863605467441399281,0]}},{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/lib.rs","num":23,"id":{"name":"lewton","disambiguator":[1532457296810215589,0]}},{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/lib.rs","num":24,"id":{"name":"byteorder","disambiguator":[6423241497825961924,0]}},{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/lib.rs","num":25,"id":{"name":"smallvec","disambiguator":[12350767666879884034,0]}},{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/lib.rs","num":26,"id":{"name":"maybe_uninit","disambiguator":[10106981387162597702,0]}},{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/lib.rs","num":27,"id":{"name":"ogg","disambiguator":[3451490031887264234,0]}}],"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/lib.rs","byte_start":0,"byte_end":1857,"line_start":1,"line_end":67,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":72},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/lib.rs","byte_start":434,"byte_end":438,"line_start":21,"line_end":21,"column_start":23,"column_end":27},"alias_span":null,"name":"open","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":20},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/lib.rs","byte_start":440,"byte_end":446,"line_start":21,"line_end":21,"column_start":29,"column_end":35},"alias_span":null,"name":"Reader","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/lib.rs","byte_start":0,"byte_end":1857,"line_start":1,"line_end":67,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":137},{"krate":0,"index":186},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":194},{"krate":0,"index":196},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":140}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":7},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"read","qualname":"::read","value":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","parent":null,"children":[{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":20},{"krate":0,"index":28},{"krate":0,"index":34},{"krate":0,"index":47},{"krate":0,"index":65},{"krate":0,"index":71},{"krate":0,"index":143},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":150},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":159},{"krate":0,"index":168},{"krate":0,"index":170},{"krate":0,"index":180},{"krate":0,"index":72},{"krate":0,"index":74},{"krate":0,"index":78},{"krate":0,"index":81},{"krate":0,"index":90},{"krate":0,"index":98},{"krate":0,"index":113},{"krate":0,"index":115},{"krate":0,"index":117},{"krate":0,"index":120},{"krate":0,"index":122},{"krate":0,"index":125},{"krate":0,"index":128},{"krate":0,"index":130}],"decl_id":null,"docs":" Items for reading and opening file formats from file.\n","sig":null,"attributes":[{"value":"/ Items for reading and opening file formats from file.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":1859,"byte_end":1916,"line_start":1,"line_end":1,"column_start":1,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":17},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":2198,"byte_end":2204,"line_start":15,"line_end":15,"column_start":11,"column_end":17},"name":"Sample","qualname":"::read::Sample","value":"Sample: dasp_sample::Sample + dasp_sample::FromSample<i8> +\ndasp_sample::FromSample<i16> + dasp_sample::FromSample<dasp_sample::I24> +\ndasp_sample::FromSample<i32> + dasp_sample::FromSample<f32>","parent":null,"children":[],"decl_id":null,"docs":" Types to which read samples may be converted via the `Reader::samples` method.\n","sig":null,"attributes":[{"value":"/ Types to which read samples may be converted via the `Reader::samples` method.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":2105,"byte_end":2187,"line_start":14,"line_end":14,"column_start":1,"column_end":83}}]},{"kind":"TupleVariant","id":{"krate":0,"index":22},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":2933,"byte_end":2942,"line_start":43,"line_end":43,"column_start":5,"column_end":14},"name":"OggVorbis","qualname":"::read::Reader::OggVorbis","value":"Reader::OggVorbis(lewton::inside_ogg::OggStreamReader<R>)","parent":{"krate":0,"index":20},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"ogg_vorbis\")","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":2898,"byte_end":2928,"line_start":42,"line_end":42,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":25},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":3016,"byte_end":3019,"line_start":45,"line_end":45,"column_start":5,"column_end":8},"name":"Wav","qualname":"::read::Reader::Wav","value":"Reader::Wav(hound::WavReader<R>)","parent":{"krate":0,"index":20},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"wav\")","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":2988,"byte_end":3011,"line_start":44,"line_end":44,"column_start":5,"column_end":28}}]},{"kind":"Enum","id":{"krate":0,"index":20},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":2776,"byte_end":2782,"line_start":36,"line_end":36,"column_start":10,"column_end":16},"name":"Reader","qualname":"::read::Reader","value":"pub enum Reader<R> where R: std::io::Read + std::io::Seek {\n    OggVorbis(lewton::inside_ogg::OggStreamReader<R>),\n    Wav(hound::WavReader<R>),\n}","parent":null,"children":[{"krate":0,"index":22},{"krate":0,"index":25}],"decl_id":null,"docs":" Returned by the `read` function, enumerates the various supported readers.\n","sig":null,"attributes":[{"value":"/ Returned by the `read` function, enumerates the various supported readers.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":2688,"byte_end":2766,"line_start":35,"line_end":35,"column_start":1,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":28},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":3285,"byte_end":3292,"line_start":52,"line_end":52,"column_start":12,"column_end":19},"name":"Samples","qualname":"::read::Samples","value":"Samples {  }","parent":null,"children":[{"krate":0,"index":32},{"krate":0,"index":33}],"decl_id":null,"docs":" An iterator that reads samples from the underlying reader, converts them to the sample type `S`\n if not already in that format and yields them.\n","sig":null,"attributes":[{"value":"/ An iterator that reads samples from the underlying reader, converts them to the sample type `S`","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":3123,"byte_end":3222,"line_start":50,"line_end":50,"column_start":1,"column_end":100}},{"value":"/ if not already in that format and yields them.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":3223,"byte_end":3273,"line_start":51,"line_end":51,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":65},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":4746,"byte_end":4752,"line_start":108,"line_end":108,"column_start":12,"column_end":18},"name":"Frames","qualname":"::read::Frames","value":"Frames {  }","parent":null,"children":[{"krate":0,"index":69},{"krate":0,"index":70}],"decl_id":null,"docs":" An iterator that reads samples from the underlying reader, converts them to frames of type `F`\n and yields them.\n","sig":null,"attributes":[{"value":"/ An iterator that reads samples from the underlying reader, converts them to frames of type `F`","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":4615,"byte_end":4713,"line_start":106,"line_end":106,"column_start":1,"column_end":99}},{"value":"/ and yields them.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":4714,"byte_end":4734,"line_start":107,"line_end":107,"column_start":1,"column_end":21}}]},{"kind":"Type","id":{"krate":0,"index":71},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":5017,"byte_end":5030,"line_start":118,"line_end":118,"column_start":10,"column_end":23},"name":"BufFileReader","qualname":"::read::BufFileReader","value":"Reader<std::io::BufReader<std::fs::File>>","parent":null,"children":[],"decl_id":null,"docs":" An alias for the buffered, file `Reader` type returned from the `open` function.\n","sig":null,"attributes":[{"value":"/ An alias for the buffered, file `Reader` type returned from the `open` function.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":4923,"byte_end":5007,"line_start":117,"line_end":117,"column_start":1,"column_end":85}}]},{"kind":"Struct","id":{"krate":0,"index":143},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":5196,"byte_end":5207,"line_start":122,"line_end":122,"column_start":12,"column_end":23},"name":"Description","qualname":"::read::Description","value":"Description {  }","parent":null,"children":[{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146}],"decl_id":null,"docs":" A description of the audio format that was read from file.\n","sig":null,"attributes":[{"value":"/ A description of the audio format that was read from file.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":5077,"byte_end":5139,"line_start":120,"line_end":120,"column_start":1,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":160},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":5388,"byte_end":5390,"line_start":131,"line_end":131,"column_start":5,"column_end":7},"name":"Io","qualname":"::read::ReadError::Io","value":"ReadError::Io(std::io::Error)","parent":{"krate":0,"index":159},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":163},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":5412,"byte_end":5418,"line_start":132,"line_end":132,"column_start":5,"column_end":11},"name":"Reader","qualname":"::read::ReadError::Reader","value":"ReadError::Reader(FormatError)","parent":{"krate":0,"index":159},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":166},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":5437,"byte_end":5454,"line_start":133,"line_end":133,"column_start":5,"column_end":22},"name":"UnsupportedFormat","qualname":"::read::ReadError::UnsupportedFormat","value":"ReadError::UnsupportedFormat","parent":{"krate":0,"index":159},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":159},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":5372,"byte_end":5381,"line_start":130,"line_end":130,"column_start":10,"column_end":19},"name":"ReadError","qualname":"::read::ReadError","value":"pub enum ReadError {\n    Io(std::io::Error),\n    Reader(FormatError),\n    UnsupportedFormat,\n}","parent":null,"children":[{"krate":0,"index":160},{"krate":0,"index":163},{"krate":0,"index":166}],"decl_id":null,"docs":" Errors that might be returned from the `Reader::new` function.\n","sig":null,"attributes":[{"value":"/ Errors that might be returned from the `Reader::new` function.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":5279,"byte_end":5345,"line_start":128,"line_end":128,"column_start":1,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":171},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":5745,"byte_end":5754,"line_start":144,"line_end":144,"column_start":5,"column_end":14},"name":"OggVorbis","qualname":"::read::FormatError::OggVorbis","value":"FormatError::OggVorbis(lewton::VorbisError)","parent":{"krate":0,"index":170},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"ogg_vorbis\")","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":5710,"byte_end":5740,"line_start":143,"line_end":143,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":174},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":5809,"byte_end":5812,"line_start":146,"line_end":146,"column_start":5,"column_end":8},"name":"Wav","qualname":"::read::FormatError::Wav","value":"FormatError::Wav(hound::Error)","parent":{"krate":0,"index":170},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"wav\")","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":5781,"byte_end":5804,"line_start":145,"line_end":145,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":177},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":5860,"byte_end":5884,"line_start":148,"line_end":148,"column_start":5,"column_end":29},"name":"WavUnsupportedSampleBits","qualname":"::read::FormatError::WavUnsupportedSampleBits","value":"FormatError::WavUnsupportedSampleBits(u16)","parent":{"krate":0,"index":170},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"wav\")","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":5832,"byte_end":5855,"line_start":147,"line_end":147,"column_start":5,"column_end":28}}]},{"kind":"Enum","id":{"krate":0,"index":170},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":5573,"byte_end":5584,"line_start":138,"line_end":138,"column_start":10,"column_end":21},"name":"FormatError","qualname":"::read::FormatError","value":"pub enum FormatError {\n    OggVorbis(lewton::VorbisError),\n    Wav(hound::Error),\n    WavUnsupportedSampleBits(u16),\n}","parent":null,"children":[{"krate":0,"index":171},{"krate":0,"index":174},{"krate":0,"index":177}],"decl_id":null,"docs":" Format-specific errors that might occur when opening or reading from an audio file.\n","sig":null,"attributes":[{"value":"/ Format-specific errors that might occur when opening or reading from an audio file.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":5459,"byte_end":5546,"line_start":136,"line_end":136,"column_start":1,"column_end":88}}]},{"kind":"Function","id":{"krate":0,"index":72},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":6139,"byte_end":6143,"line_start":158,"line_end":158,"column_start":8,"column_end":12},"name":"open","qualname":"::read::open","value":"pub fn open<P>(P) -> Result<BufFileReader, ReadError> where\nP: AsRef<std::path::Path>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to open an audio `Reader` from the file at the specified `Path`.","sig":null,"attributes":[{"value":"/ Attempts to open an audio `Reader` from the file at the specified `Path`.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":5989,"byte_end":6066,"line_start":155,"line_end":155,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":6067,"byte_end":6070,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ The format is determined from the path's file extension.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":6071,"byte_end":6131,"line_start":157,"line_end":157,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":6358,"byte_end":6364,"line_start":167,"line_end":167,"column_start":12,"column_end":18},"name":"format","qualname":"<Description>::format","value":"pub fn format(&Self) -> Format","parent":null,"children":[],"decl_id":null,"docs":" The format from which the audio will be read.\n","sig":null,"attributes":[{"value":"/ The format from which the audio will be read.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":6297,"byte_end":6346,"line_start":166,"line_end":166,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":6563,"byte_end":6576,"line_start":174,"line_end":174,"column_start":12,"column_end":25},"name":"channel_count","qualname":"<Description>::channel_count","value":"pub fn channel_count(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The number of channels of audio.","sig":null,"attributes":[{"value":"/ The number of channels of audio.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":6415,"byte_end":6451,"line_start":171,"line_end":171,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":6456,"byte_end":6459,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ E.g. For audio stored in stereo this should return `2`. Mono audio will return `1`.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":6464,"byte_end":6551,"line_start":173,"line_end":173,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":6846,"byte_end":6857,"line_start":182,"line_end":182,"column_start":12,"column_end":23},"name":"sample_rate","qualname":"<Description>::sample_rate","value":"pub fn sample_rate(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The rate in Hertz at which each channel of the stored audio is sampled.","sig":null,"attributes":[{"value":"/ The rate in Hertz at which each channel of the stored audio is sampled.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":6631,"byte_end":6706,"line_start":178,"line_end":178,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":6711,"byte_end":6714,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ E.g. A `sample_rate` of 44_100 indicates that the audio is sampled 44_100 times per second","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":6719,"byte_end":6813,"line_start":180,"line_end":180,"column_start":5,"column_end":99}},{"value":"/ per channel.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":6818,"byte_end":6834,"line_start":181,"line_end":181,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":7270,"byte_end":7274,"line_start":194,"line_end":194,"column_start":12,"column_end":16},"name":"open","qualname":"<BufFileReader>::open","value":"pub fn open<P>(P) -> Result<Self, ReadError> where P: AsRef<std::path::Path>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to open an audio `Reader` from the file at the specified `Path`.","sig":null,"attributes":[{"value":"/ Attempts to open an audio `Reader` from the file at the specified `Path`.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":6933,"byte_end":7010,"line_start":188,"line_end":188,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":7015,"byte_end":7018,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ This function is a convenience wrapper around the `Reader::new` function.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":7023,"byte_end":7100,"line_start":190,"line_end":190,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":7105,"byte_end":7108,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ This function pays no attention to the `file_path`'s extension and instead attempts to read","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":7113,"byte_end":7208,"line_start":192,"line_end":192,"column_start":5,"column_end":100}},{"value":"/ a supported `Format` via the file header.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":7213,"byte_end":7258,"line_start":193,"line_end":193,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":7878,"byte_end":7881,"line_start":214,"line_end":214,"column_start":12,"column_end":15},"name":"new","qualname":"<Reader<R>>::new","value":"pub fn new(R) -> Result<Self, ReadError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to read the format of the audio read by the given `reader` and returns the associated\n `Reader` variant.","sig":null,"attributes":[{"value":"/ Attempts to read the format of the audio read by the given `reader` and returns the associated","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":7613,"byte_end":7711,"line_start":209,"line_end":209,"column_start":5,"column_end":103}},{"value":"/ `Reader` variant.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":7716,"byte_end":7737,"line_start":210,"line_end":210,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":7742,"byte_end":7745,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ The format is determined by attempting to construct each specific format reader until one","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":7750,"byte_end":7843,"line_start":212,"line_end":212,"column_start":5,"column_end":98}},{"value":"/ is successful.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":7848,"byte_end":7866,"line_start":213,"line_end":213,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":10315,"byte_end":10321,"line_start":281,"line_end":281,"column_start":12,"column_end":18},"name":"format","qualname":"<Reader<R>>::format","value":"pub fn format(&Self) -> Format","parent":null,"children":[],"decl_id":null,"docs":" The format from which the audio will be read.\n","sig":null,"attributes":[{"value":"/ The format from which the audio will be read.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":10254,"byte_end":10303,"line_start":280,"line_end":280,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":10795,"byte_end":10806,"line_start":295,"line_end":295,"column_start":12,"column_end":23},"name":"description","qualname":"<Reader<R>>::description","value":"pub fn description(&Self) -> Description","parent":null,"children":[],"decl_id":null,"docs":" A basic description of the audio being read.\n","sig":null,"attributes":[{"value":"/ A basic description of the audio being read.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":10735,"byte_end":10783,"line_start":294,"line_end":294,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":12497,"byte_end":12504,"line_start":340,"line_end":340,"column_start":12,"column_end":19},"name":"samples","qualname":"<Reader<R>>::samples","value":"pub fn samples<S>(&mut Self) -> Samples<, R, S> where S: Sample","parent":null,"children":[],"decl_id":null,"docs":" Produce an iterator that reads samples from the underlying reader, converts them to the\n sample type `S` if not already in that format and yields them.","sig":null,"attributes":[{"value":"/ Produce an iterator that reads samples from the underlying reader, converts them to the","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":12241,"byte_end":12332,"line_start":336,"line_end":336,"column_start":5,"column_end":96}},{"value":"/ sample type `S` if not already in that format and yields them.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":12337,"byte_end":12403,"line_start":337,"line_end":337,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":12408,"byte_end":12411,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ When reading from multiple channels, samples are **interleaved**.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":12416,"byte_end":12485,"line_start":339,"line_end":339,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":14952,"byte_end":14958,"line_start":403,"line_end":403,"column_start":12,"column_end":18},"name":"frames","qualname":"<Reader<R>>::frames","value":"pub fn frames<F>(&mut Self) -> Frames<, R, F> where F: dasp_frame::Frame,\nF::Sample: Sample","parent":null,"children":[],"decl_id":null,"docs":" Produce an iterator that yields read frames from the underlying `Reader`.","sig":null,"attributes":[{"value":"/ Produce an iterator that yields read frames from the underlying `Reader`.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":14520,"byte_end":14597,"line_start":396,"line_end":396,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":14602,"byte_end":14605,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ This method currently expects that the frame type `F` has the same number of channels as","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":14610,"byte_end":14702,"line_start":398,"line_end":398,"column_start":5,"column_end":97}},{"value":"/ stored in the underlying audio format.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":14707,"byte_end":14749,"line_start":399,"line_end":399,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":14754,"byte_end":14757,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ TODO: Should consider changing this behaviour to check the audio file's actual number of","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":14762,"byte_end":14854,"line_start":401,"line_end":401,"column_start":5,"column_end":97}},{"value":"/ channels and automatically convert to `F`'s number of channels while reading.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":14859,"byte_end":14940,"line_start":402,"line_end":402,"column_start":5,"column_end":86}}]},{"kind":"Mod","id":{"krate":0,"index":132},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/write.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"write","qualname":"::write","value":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/write.rs","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":187},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/lib.rs","byte_start":656,"byte_end":665,"line_start":29,"line_end":29,"column_start":5,"column_end":14},"name":"OggVorbis","qualname":"::Format::OggVorbis","value":"Format::OggVorbis","parent":{"krate":0,"index":186},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"ogg_vorbis\")","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/lib.rs","byte_start":621,"byte_end":651,"line_start":28,"line_end":28,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":189},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/lib.rs","byte_start":699,"byte_end":702,"line_start":31,"line_end":31,"column_start":5,"column_end":8},"name":"Wav","qualname":"::Format::Wav","value":"Format::Wav","parent":{"krate":0,"index":186},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"wav\")","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/lib.rs","byte_start":671,"byte_end":694,"line_start":30,"line_end":30,"column_start":5,"column_end":28}}]},{"kind":"Enum","id":{"krate":0,"index":186},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/lib.rs","byte_start":569,"byte_end":575,"line_start":25,"line_end":25,"column_start":10,"column_end":16},"name":"Format","qualname":"::Format","value":"pub enum Format { OggVorbis, Wav, }","parent":null,"children":[{"krate":0,"index":187},{"krate":0,"index":189}],"decl_id":null,"docs":" Enumerates the various formats supported by the crate.\n","sig":null,"attributes":[{"value":"/ Enumerates the various formats supported by the crate.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/lib.rs","byte_start":450,"byte_end":508,"line_start":23,"line_end":23,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/lib.rs","byte_start":929,"byte_end":943,"line_start":40,"line_end":40,"column_start":12,"column_end":26},"name":"from_extension","qualname":"<Format>::from_extension","value":"pub fn from_extension(&str) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Read a `Format` from the given `extension`.","sig":null,"attributes":[{"value":"/ Read a `Format` from the given `extension`.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/lib.rs","byte_start":771,"byte_end":818,"line_start":37,"line_end":37,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/lib.rs","byte_start":823,"byte_end":826,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ This function expects that the `extension` is lowercase ASCII, e.g \"wav\" or \"ogg\".","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/lib.rs","byte_start":831,"byte_end":917,"line_start":39,"line_end":39,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/lib.rs","byte_start":1480,"byte_end":1489,"line_start":55,"line_end":55,"column_start":12,"column_end":21},"name":"extension","qualname":"<Format>::extension","value":"pub fn extension(Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" Return the most commonly used file extension associated with the `Format`.\n","sig":null,"attributes":[{"value":"/ Return the most commonly used file extension associated with the `Format`.","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/lib.rs","byte_start":1390,"byte_end":1468,"line_start":54,"line_end":54,"column_start":5,"column_end":83}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":2441,"byte_end":2442,"line_start":25,"line_end":25,"column_start":20,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":6279,"byte_end":6290,"line_start":165,"line_end":165,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":6913,"byte_end":6926,"line_start":187,"line_end":187,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":7553,"byte_end":7559,"line_start":205,"line_end":205,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":15208,"byte_end":15215,"line_start":415,"line_end":415,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":94},{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":19239,"byte_end":19245,"line_start":521,"line_end":521,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":102},{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":20484,"byte_end":20495,"line_start":564,"line_end":564,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":20643,"byte_end":20654,"line_start":571,"line_end":571,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":20895,"byte_end":20904,"line_start":584,"line_end":584,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":21046,"byte_end":21055,"line_start":593,"line_end":593,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":121}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":21164,"byte_end":21175,"line_start":599,"line_end":599,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":123},{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":22946,"byte_end":22955,"line_start":642,"line_end":642,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":126},{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":23542,"byte_end":23553,"line_start":659,"line_end":659,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":129}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":24600,"byte_end":24609,"line_start":684,"line_end":684,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/lib.rs","byte_start":758,"byte_end":764,"line_start":36,"line_end":36,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":141},{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/lib.rs","byte_start":390,"byte_end":394,"line_start":18,"line_end":18,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":7}},{"kind":"Mod","span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/lib.rs","byte_start":404,"byte_end":409,"line_start":19,"line_end":19,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":132}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":2223,"byte_end":2229,"line_start":16,"line_end":16,"column_start":18,"column_end":24},"kind":"SuperTrait","from":{"krate":21,"index":147},"to":{"krate":0,"index":17}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":2249,"byte_end":2259,"line_start":17,"line_end":17,"column_start":20,"column_end":30},"kind":"SuperTrait","from":{"krate":21,"index":43},"to":{"krate":0,"index":17}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":2283,"byte_end":2293,"line_start":18,"line_end":18,"column_start":20,"column_end":30},"kind":"SuperTrait","from":{"krate":21,"index":43},"to":{"krate":0,"index":17}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":2318,"byte_end":2328,"line_start":19,"line_end":19,"column_start":20,"column_end":30},"kind":"SuperTrait","from":{"krate":21,"index":43},"to":{"krate":0,"index":17}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":2366,"byte_end":2376,"line_start":20,"line_end":20,"column_start":20,"column_end":30},"kind":"SuperTrait","from":{"krate":21,"index":43},"to":{"krate":0,"index":17}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":2401,"byte_end":2411,"line_start":21,"line_end":21,"column_start":20,"column_end":30},"kind":"SuperTrait","from":{"krate":21,"index":43},"to":{"krate":0,"index":17}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":2441,"byte_end":2442,"line_start":25,"line_end":25,"column_start":20,"column_end":21},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":19},"to":{"krate":0,"index":17}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":6279,"byte_end":6290,"line_start":165,"line_end":165,"column_start":6,"column_end":17},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":143},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":6913,"byte_end":6926,"line_start":187,"line_end":187,"column_start":6,"column_end":19},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":71},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":7553,"byte_end":7559,"line_start":205,"line_end":205,"column_start":9,"column_end":15},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":20},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":15208,"byte_end":15215,"line_start":415,"line_end":415,"column_start":29,"column_end":36},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":28},"to":{"krate":2,"index":7822}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":19239,"byte_end":19245,"line_start":521,"line_end":521,"column_start":29,"column_end":35},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":65},"to":{"krate":2,"index":7822}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":20484,"byte_end":20495,"line_start":564,"line_end":564,"column_start":36,"column_end":47},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":170},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":20643,"byte_end":20654,"line_start":571,"line_end":571,"column_start":29,"column_end":40},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":170},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":20895,"byte_end":20904,"line_start":584,"line_end":584,"column_start":21,"column_end":30},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":159},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":21046,"byte_end":21055,"line_start":593,"line_end":593,"column_start":31,"column_end":40},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":159},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":21164,"byte_end":21175,"line_start":599,"line_end":599,"column_start":28,"column_end":39},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":170},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":22946,"byte_end":22955,"line_start":642,"line_end":642,"column_start":28,"column_end":37},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":159},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":23542,"byte_end":23553,"line_start":659,"line_end":659,"column_start":28,"column_end":39},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":170},"to":{"krate":2,"index":9560}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/read.rs","byte_start":24600,"byte_end":24609,"line_start":684,"line_end":684,"column_start":28,"column_end":37},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":159},"to":{"krate":2,"index":9560}},{"span":{"file_name":"/home/louie/.cargo/registry/src/github.com-1ecc6299db9ec823/audrey-0.3.0/src/lib.rs","byte_start":758,"byte_end":764,"line_start":36,"line_end":36,"column_start":6,"column_end":12},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":186},"to":{"krate":4294967295,"index":4294967295}}]}